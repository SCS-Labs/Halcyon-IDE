/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package halcyon.ide;

import java.awt.*;
import java.awt.event.KeyEvent;
import java.io.*;
import java.net.URI;
import java.net.URL;
import java.util.*;
import java.util.logging.*;
import java.util.regex.*;
import javax.swing.*;
import javax.swing.event.*;
import javax.swing.filechooser.FileNameExtensionFilter;
import javax.swing.tree.TreePath;
import javax.swing.undo.UndoManager;
import org.fife.ui.autocomplete.*;
import org.fife.ui.rsyntaxtextarea.*;
import org.fife.ui.rtextarea.*;
 

/**
 *
 * @author s4n7h0
 */
public class MainPanel extends javax.swing.JFrame {

    /**
     * Creates new form MainPanel
     */
    ConfigurationManager cm;
    
    public MainPanel(ConfigurationManager c) {
         cm = c;
         String lookandfeel = null;
        try { 
             
            //lookandfeel = UIManager.getSystemLookAndFeelClassName();
            lookandfeel = UIManager.getCrossPlatformLookAndFeelClassName();
            
            UIManager.setLookAndFeel(lookandfeel);
           // UIManager.setLookAndFeel("javax.swing.plaf.metal.MetalLookAndFeel");
           
            
            
        } catch (Exception ex) {
            Logger.getLogger(MainPanel.class.getName()).log(Level.SEVERE, null, ex);
        } 
        //new MainPanel();
        initComponents();
        Toolkit tk = Toolkit.getDefaultToolkit();
        int xsize = (int) tk.getScreenSize().getWidth();
        int ysize = (int) tk.getScreenSize().getHeight();
        this.setSize(xsize, ysize);
        setIcon();
        setExtendedState(java.awt.Frame.MAXIMIZED_BOTH); 
        cm.init();
        Configure(); 
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        jFileChooser1 = new javax.swing.JFileChooser();
        jDialog_SearchBox = new javax.swing.JDialog();
        jPanel7 = new javax.swing.JPanel();
        jCheckBox_matchcase = new javax.swing.JCheckBox();
        jCheckBox_regex = new javax.swing.JCheckBox();
        jLabel2 = new javax.swing.JLabel();
        jTextField_searchItem = new javax.swing.JTextField();
        jButton_FindNext = new javax.swing.JButton();
        jButton_close = new javax.swing.JButton();
        buttonGroup_scanType = new javax.swing.ButtonGroup();
        jPopupMenu1 = new javax.swing.JPopupMenu();
        jMenuItem_closeWorkSpace = new javax.swing.JMenuItem();
        jMenuItem_closeAll = new javax.swing.JMenuItem();
        jDialog_About = new javax.swing.JDialog();
        jPanel8 = new javax.swing.JPanel();
        jLabel12 = new javax.swing.JLabel();
        jLabel_About = new javax.swing.JLabel();
        jDialog_Settings = new javax.swing.JDialog();
        jTabbedPane_Settings = new javax.swing.JTabbedPane();
        jPanel3 = new javax.swing.JPanel();
        jLabel23 = new javax.swing.JLabel();
        jSeparator14 = new javax.swing.JSeparator();
        jLabel24 = new javax.swing.JLabel();
        jRadioButton_settingsScanTCP = new javax.swing.JRadioButton();
        jRadioButton_settignsScanUDP = new javax.swing.JRadioButton();
        jLabel25 = new javax.swing.JLabel();
        jLabel26 = new javax.swing.JLabel();
        jTextField_ScriptArgsSettings = new javax.swing.JTextField();
        jTextField_ScriptArgsFileSettings = new javax.swing.JTextField();
        jButton_ArgFileBrowse = new javax.swing.JButton();
        jSeparator15 = new javax.swing.JSeparator();
        jLabel32 = new javax.swing.JLabel();
        jLabel33 = new javax.swing.JLabel();
        jCheckBox_settingsPacketTrace = new javax.swing.JCheckBox();
        jCheckBox_settingsDebug = new javax.swing.JCheckBox();
        jCheckBox_settingsVerbose = new javax.swing.JCheckBox();
        jCheckBox_ArgSettings = new javax.swing.JCheckBox();
        jCheckBox_ArgFileSettings = new javax.swing.JCheckBox();
        jPanel12 = new javax.swing.JPanel();
        jLabel34 = new javax.swing.JLabel();
        jLabel35 = new javax.swing.JLabel();
        jLabel36 = new javax.swing.JLabel();
        jTextField_envEpath = new javax.swing.JTextField();
        jLabel37 = new javax.swing.JLabel();
        jTextField_envSpath = new javax.swing.JTextField();
        jLabel38 = new javax.swing.JLabel();
        jTextField_envLpath = new javax.swing.JTextField();
        jButton_BrowseNmapPath = new javax.swing.JButton();
        jButton_BrowseNSEPath = new javax.swing.JButton();
        jButton_BrowseLibPath = new javax.swing.JButton();
        jButton_autoconfiguration = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jButton_CancelSettings = new javax.swing.JButton();
        jButton_SaveSettings = new javax.swing.JButton();
        jLabel_SettingsStatus = new javax.swing.JLabel();
        jDialog_New = new javax.swing.JDialog();
        jPanel6 = new javax.swing.JPanel();
        jLabel39 = new javax.swing.JLabel();
        jLabel40 = new javax.swing.JLabel();
        jTextField_sName = new javax.swing.JTextField();
        jScrollPane9 = new javax.swing.JScrollPane();
        jTextArea_sDescription = new javax.swing.JTextArea();
        jButton_sBrowse1 = new javax.swing.JButton();
        jTextField_sAuthor = new javax.swing.JTextField();
        jLabel41 = new javax.swing.JLabel();
        jComboBox_sService = new javax.swing.JComboBox<>();
        jLabel42 = new javax.swing.JLabel();
        jScrollPane10 = new javax.swing.JScrollPane();
        jList_sCategory = new javax.swing.JList<>();
        jLabel43 = new javax.swing.JLabel();
        jPanel13 = new javax.swing.JPanel();
        jButton_sCancel1 = new javax.swing.JButton();
        jSeparator16 = new javax.swing.JSeparator();
        jButton_sReset = new javax.swing.JButton();
        jButton_sCreate1 = new javax.swing.JButton();
        jToolBar1 = new javax.swing.JToolBar();
        jButton_new = new javax.swing.JButton();
        jButton_open = new javax.swing.JButton();
        jButton_save = new javax.swing.JButton();
        jButton_print = new javax.swing.JButton();
        jSeparator2 = new javax.swing.JToolBar.Separator();
        jButton_cut = new javax.swing.JButton();
        jButton_copy = new javax.swing.JButton();
        jButton_paste = new javax.swing.JButton();
        jButton_undo = new javax.swing.JButton();
        jButton_find = new javax.swing.JButton();
        jSeparator3 = new javax.swing.JToolBar.Separator();
        jButton_scan = new javax.swing.JButton();
        jButton_stop = new javax.swing.JButton();
        jSeparator11 = new javax.swing.JToolBar.Separator();
        jTextField_host = new javax.swing.JTextField();
        jTextField_port = new javax.swing.JTextField();
        jSeparator4 = new javax.swing.JToolBar.Separator();
        jButton_settings = new javax.swing.JButton();
        jButton_about = new javax.swing.JButton();
        jToolBar2 = new javax.swing.JToolBar();
        jLabel_Status = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jSeparator5 = new javax.swing.JToolBar.Separator();
        jProgressBar_status = new javax.swing.JProgressBar();
        jSplitPane_workspace = new javax.swing.JSplitPane();
        jSplitPane_workpane = new javax.swing.JSplitPane();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTree_NSE = new javax.swing.JTree();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTree_NSEDATA = new javax.swing.JTree();
        jScrollPane4 = new javax.swing.JScrollPane();
        jTree_NSELIB = new javax.swing.JTree();
        jTabbedPane_workspace = new javax.swing.JTabbedPane();
        jPanel_status = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea_output = new javax.swing.JTextArea();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu_File = new javax.swing.JMenu();
        jMenuItem_New = new javax.swing.JMenuItem();
        jMenuItem_Open = new javax.swing.JMenuItem();
        jMenuItem_Save = new javax.swing.JMenuItem();
        jMenuItem_SaveAs = new javax.swing.JMenuItem();
        jMenuItem_Close = new javax.swing.JMenuItem();
        jSeparator1 = new javax.swing.JPopupMenu.Separator();
        jMenuItem_exportScript = new javax.swing.JMenuItem();
        jMenuItem_updateScriptDB = new javax.swing.JMenuItem();
        jSeparator8 = new javax.swing.JPopupMenu.Separator();
        jMenuItem_print = new javax.swing.JMenuItem();
        jMenuItem_Exit = new javax.swing.JMenuItem();
        jMenu_Edit = new javax.swing.JMenu();
        jMenuItem_cut = new javax.swing.JMenuItem();
        jMenuItem_copy = new javax.swing.JMenuItem();
        jMenuItem_paste = new javax.swing.JMenuItem();
        jMenuItem_undo = new javax.swing.JMenuItem();
        jSeparator6 = new javax.swing.JPopupMenu.Separator();
        jMenuItem_find = new javax.swing.JMenuItem();
        jMenu_Proj = new javax.swing.JMenu();
        jMenuItem_run = new javax.swing.JMenuItem();
        jMenuItem_stop = new javax.swing.JMenuItem();
        jMenu_codegen = new javax.swing.JMenu();
        jMenuItem_afpHelper = new javax.swing.JMenuItem();
        jMenuItem_bittorrent = new javax.swing.JMenuItem();
        jMenu1 = new javax.swing.JMenu();
        jMenuItem_bruteDriver = new javax.swing.JMenuItem();
        jMenuItem_bruteEngine = new javax.swing.JMenuItem();
        jMenu2 = new javax.swing.JMenu();
        jMenuItem_CredToDB = new javax.swing.JMenuItem();
        jMenuItem_CredToCSV = new javax.swing.JMenuItem();
        jMenu3 = new javax.swing.JMenu();
        jMenuItem_mssqlQ = new javax.swing.JMenuItem();
        jMenuItem_dhcp6 = new javax.swing.JMenuItem();
        jMenu4 = new javax.swing.JMenu();
        jMenuItem_dnsQ = new javax.swing.JMenuItem();
        jMenuItem_dnsBList = new javax.swing.JMenuItem();
        jMenuItem_dnssd = new javax.swing.JMenuItem();
        jMenuItem_drda = new javax.swing.JMenuItem();
        jMenuItem_EAP = new javax.swing.JMenuItem();
        jMenuItem_goip = new javax.swing.JMenuItem();
        jMenu5 = new javax.swing.JMenu();
        jMenuItem_HTTPspider = new javax.swing.JMenuItem();
        jMenuItem_imap = new javax.swing.JMenuItem();
        jMenuItem_informix = new javax.swing.JMenuItem();
        jMenuItem_JDWP = new javax.swing.JMenuItem();
        jMenuItem_ncp = new javax.swing.JMenuItem();
        jMenuItem_openssl = new javax.swing.JMenuItem();
        jMenu6 = new javax.swing.JMenu();
        jMenuItem_nrpc = new javax.swing.JMenuItem();
        jMenuItem_rpc = new javax.swing.JMenuItem();
        jMenu7 = new javax.swing.JMenu();
        jMenuItem_socketConnSend = new javax.swing.JMenuItem();
        jMenuItem_tftp = new javax.swing.JMenuItem();
        jMenuItem_xamp = new javax.swing.JMenuItem();
        jSeparator7 = new javax.swing.JPopupMenu.Separator();
        jMenuItem_Settings = new javax.swing.JMenuItem();
        jMenu_Help = new javax.swing.JMenu();
        jMenuItem_HelpGettingStarting = new javax.swing.JMenuItem();
        jMenuItem_HelpNSEDoc = new javax.swing.JMenuItem();
        jSeparator9 = new javax.swing.JPopupMenu.Separator();
        jMenuItem_HelpAbout = new javax.swing.JMenuItem();
        jMenuItem_HelpReportBugs = new javax.swing.JMenuItem();

        jDialog_SearchBox.setTitle("Search");
        jDialog_SearchBox.setIconImage(Toolkit.getDefaultToolkit().getImage(getClass().getResource("/halcyon/icons/logo.png")));

        jPanel7.setLayout(new java.awt.GridBagLayout());

        jCheckBox_matchcase.setText("Match Case");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        jPanel7.add(jCheckBox_matchcase, gridBagConstraints);

        jCheckBox_regex.setText("Regex");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        jPanel7.add(jCheckBox_regex, gridBagConstraints);

        jLabel2.setText("Search Text : ");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        jPanel7.add(jLabel2, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.ipadx = 120;
        jPanel7.add(jTextField_searchItem, gridBagConstraints);

        jButton_FindNext.setText("Find");
        jButton_FindNext.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_FindNextActionPerformed(evt);
            }
        });

        jButton_close.setText("Close");
        jButton_close.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_closeActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jDialog_SearchBoxLayout = new javax.swing.GroupLayout(jDialog_SearchBox.getContentPane());
        jDialog_SearchBox.getContentPane().setLayout(jDialog_SearchBoxLayout);
        jDialog_SearchBoxLayout.setHorizontalGroup(
            jDialog_SearchBoxLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jDialog_SearchBoxLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jDialog_SearchBoxLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel7, javax.swing.GroupLayout.DEFAULT_SIZE, 371, Short.MAX_VALUE)
                    .addGroup(jDialog_SearchBoxLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jButton_FindNext, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jButton_close, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        jDialog_SearchBoxLayout.setVerticalGroup(
            jDialog_SearchBoxLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jDialog_SearchBoxLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jDialog_SearchBoxLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton_FindNext)
                    .addComponent(jButton_close))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jMenuItem_closeWorkSpace.setIcon(new javax.swing.ImageIcon(getClass().getResource("/halcyon/icons/x.gif"))); // NOI18N
        jMenuItem_closeWorkSpace.setText("Close");
        jMenuItem_closeWorkSpace.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem_closeWorkSpaceActionPerformed(evt);
            }
        });
        jPopupMenu1.add(jMenuItem_closeWorkSpace);

        jMenuItem_closeAll.setIcon(new javax.swing.ImageIcon(getClass().getResource("/halcyon/icons/x.gif"))); // NOI18N
        jMenuItem_closeAll.setText("Close All");
        jMenuItem_closeAll.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem_closeAllActionPerformed(evt);
            }
        });
        jPopupMenu1.add(jMenuItem_closeAll);

        jDialog_About.setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        jDialog_About.setTitle("About");
        jDialog_About.setIconImage(Toolkit.getDefaultToolkit().getImage(getClass().getResource("/halcyon/icons/logo.png")));
        jDialog_About.setModal(true);
        jDialog_About.setResizable(false);

        jPanel8.setBackground(new java.awt.Color(13, 113, 170));
        jPanel8.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jPanel8MouseClicked(evt);
            }
        });

        jLabel12.setBackground(new java.awt.Color(255, 255, 255));
        jLabel12.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel12.setIcon(new javax.swing.ImageIcon(getClass().getResource("/halcyon/icons/logo-name.png"))); // NOI18N
        jLabel12.setOpaque(true);

        jLabel_About.setBackground(new java.awt.Color(16, 113, 170));
        jLabel_About.setFont(new java.awt.Font("Lucida Console", 0, 12)); // NOI18N
        jLabel_About.setForeground(new java.awt.Color(255, 255, 255));
        jLabel_About.setText("<html> <body> <p> <h3>Halcyon IDE</h3> Version: 2.0.2 <br>Codename: Boreas <br> Build id: 20200803-1200<br> </p> <p align=\"justify\"> (c) Copyright GPL 3.0 License. https://halcyon-ide.org <br>  </p> <br><br> </p> </body></html>");

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 212, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel_About, javax.swing.GroupLayout.DEFAULT_SIZE, 580, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel_About, javax.swing.GroupLayout.PREFERRED_SIZE, 306, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(36, Short.MAX_VALUE))
            .addComponent(jLabel12, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout jDialog_AboutLayout = new javax.swing.GroupLayout(jDialog_About.getContentPane());
        jDialog_About.getContentPane().setLayout(jDialog_AboutLayout);
        jDialog_AboutLayout.setHorizontalGroup(
            jDialog_AboutLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel8, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jDialog_AboutLayout.setVerticalGroup(
            jDialog_AboutLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        jDialog_Settings.setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        jDialog_Settings.setTitle("Settings");
        jDialog_Settings.setIconImage(Toolkit.getDefaultToolkit().getImage(getClass().getResource("/halcyon/icons/logo.png")));
        jDialog_Settings.setModal(true);
        jDialog_Settings.addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosed(java.awt.event.WindowEvent evt) {
                jDialog_SettingsWindowClosed(evt);
            }
            public void windowOpened(java.awt.event.WindowEvent evt) {
                jDialog_SettingsWindowOpened(evt);
            }
        });

        jLabel23.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jLabel23.setForeground(new java.awt.Color(16, 113, 170));
        jLabel23.setText("Nmap Scan Type");

        jLabel24.setIcon(new javax.swing.ImageIcon(getClass().getResource("/halcyon/icons/icon-settings.png"))); // NOI18N

        buttonGroup_scanType.add(jRadioButton_settingsScanTCP);
        jRadioButton_settingsScanTCP.setSelected(true);
        jRadioButton_settingsScanTCP.setText("TCP Scanning");

        buttonGroup_scanType.add(jRadioButton_settignsScanUDP);
        jRadioButton_settignsScanUDP.setText("UDP Scanning");

        jLabel25.setIcon(new javax.swing.ImageIcon(getClass().getResource("/halcyon/icons/icon-settings.png"))); // NOI18N

        jLabel26.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jLabel26.setForeground(new java.awt.Color(16, 113, 170));
        jLabel26.setText("Nmap Script Arguments");

        jTextField_ScriptArgsSettings.setEditable(false);
        jTextField_ScriptArgsSettings.setBackground(new java.awt.Color(255, 255, 255));

        jTextField_ScriptArgsFileSettings.setEditable(false);
        jTextField_ScriptArgsFileSettings.setBackground(new java.awt.Color(255, 255, 255));

        jButton_ArgFileBrowse.setText("Browse");
        jButton_ArgFileBrowse.setEnabled(false);
        jButton_ArgFileBrowse.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_ArgFileBrowseActionPerformed(evt);
            }
        });

        jLabel32.setIcon(new javax.swing.ImageIcon(getClass().getResource("/halcyon/icons/icon-settings.png"))); // NOI18N

        jLabel33.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jLabel33.setForeground(new java.awt.Color(16, 113, 170));
        jLabel33.setText("Script Scan Settings");

        jCheckBox_settingsPacketTrace.setText("Packet Trace");

        jCheckBox_settingsDebug.setSelected(true);
        jCheckBox_settingsDebug.setText("Debug Mode");

        jCheckBox_settingsVerbose.setText("Verbose");

        jCheckBox_ArgSettings.setText("Script Arguments (--script-args)");
        jCheckBox_ArgSettings.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox_ArgSettingsActionPerformed(evt);
            }
        });

        jCheckBox_ArgFileSettings.setText("Argument File (--script-args-file)");
        jCheckBox_ArgFileSettings.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox_ArgFileSettingsActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jLabel24)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel23, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(jSeparator14, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jLabel25)
                        .addGap(18, 18, 18)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel26, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jCheckBox_ArgSettings, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jCheckBox_ArgFileSettings, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel3Layout.createSequentialGroup()
                                        .addGap(18, 18, 18)
                                        .addComponent(jTextField_ScriptArgsFileSettings, javax.swing.GroupLayout.PREFERRED_SIZE, 478, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(jPanel3Layout.createSequentialGroup()
                                        .addGap(19, 19, 19)
                                        .addComponent(jTextField_ScriptArgsSettings)))
                                .addGap(18, 18, 18)
                                .addComponent(jButton_ArgFileBrowse))))
                    .addComponent(jSeparator15, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(43, 43, 43)
                        .addComponent(jRadioButton_settingsScanTCP)
                        .addGap(18, 18, 18)
                        .addComponent(jRadioButton_settignsScanUDP)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jLabel32)
                        .addGap(18, 18, 18)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel33, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jCheckBox_settingsDebug)
                                    .addComponent(jCheckBox_settingsPacketTrace)
                                    .addComponent(jCheckBox_settingsVerbose))
                                .addGap(0, 700, Short.MAX_VALUE)))))
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel24, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel23, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jRadioButton_settignsScanUDP)
                    .addComponent(jRadioButton_settingsScanTCP))
                .addGap(18, 18, 18)
                .addComponent(jSeparator14, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel25, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel26, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextField_ScriptArgsSettings, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jCheckBox_ArgSettings))
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextField_ScriptArgsFileSettings, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton_ArgFileBrowse)
                    .addComponent(jCheckBox_ArgFileSettings))
                .addGap(18, 18, 18)
                .addComponent(jSeparator15, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel32, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel33, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jCheckBox_settingsPacketTrace)
                .addGap(18, 18, 18)
                .addComponent(jCheckBox_settingsDebug)
                .addGap(18, 18, 18)
                .addComponent(jCheckBox_settingsVerbose)
                .addContainerGap(23, Short.MAX_VALUE))
        );

        jTabbedPane_Settings.addTab("Scanning Options", jPanel3);

        jLabel34.setIcon(new javax.swing.ImageIcon(getClass().getResource("/halcyon/icons/icon-settings.png"))); // NOI18N

        jLabel35.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jLabel35.setForeground(new java.awt.Color(16, 113, 170));
        jLabel35.setText("Environment Settings");

        jLabel36.setText("Nmap Executable Path");

        jTextField_envEpath.setEditable(false);
        jTextField_envEpath.setBackground(new java.awt.Color(255, 255, 255));

        jLabel37.setText("Nmap Script Path");

        jTextField_envSpath.setEditable(false);
        jTextField_envSpath.setBackground(new java.awt.Color(255, 255, 255));

        jLabel38.setText("Nmap Library Path");

        jTextField_envLpath.setEditable(false);
        jTextField_envLpath.setBackground(new java.awt.Color(255, 255, 255));

        jButton_BrowseNmapPath.setText("Browse");
        jButton_BrowseNmapPath.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_BrowseNmapPathActionPerformed(evt);
            }
        });

        jButton_BrowseNSEPath.setText("Browse");
        jButton_BrowseNSEPath.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_BrowseNSEPathActionPerformed(evt);
            }
        });

        jButton_BrowseLibPath.setText("Browse");
        jButton_BrowseLibPath.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_BrowseLibPathActionPerformed(evt);
            }
        });

        jButton_autoconfiguration.setText("Auto Configure");
        jButton_autoconfiguration.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_autoconfigurationActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel12Layout = new javax.swing.GroupLayout(jPanel12);
        jPanel12.setLayout(jPanel12Layout);
        jPanel12Layout.setHorizontalGroup(
            jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel12Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel34)
                .addGap(18, 18, 18)
                .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel35, javax.swing.GroupLayout.DEFAULT_SIZE, 801, Short.MAX_VALUE)
                    .addGroup(jPanel12Layout.createSequentialGroup()
                        .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jButton_autoconfiguration)
                            .addGroup(jPanel12Layout.createSequentialGroup()
                                .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(jLabel38, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jLabel37, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jLabel36, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jTextField_envEpath, javax.swing.GroupLayout.DEFAULT_SIZE, 435, Short.MAX_VALUE)
                                    .addComponent(jTextField_envSpath)
                                    .addComponent(jTextField_envLpath))
                                .addGap(18, 18, 18)
                                .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jButton_BrowseNSEPath)
                                    .addComponent(jButton_BrowseNmapPath)
                                    .addComponent(jButton_BrowseLibPath))))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel12Layout.setVerticalGroup(
            jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel12Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel35, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel34, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jButton_BrowseNmapPath, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jTextField_envEpath, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel36, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel37, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jButton_BrowseNSEPath)
                        .addComponent(jTextField_envSpath, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jTextField_envLpath)
                    .addComponent(jButton_BrowseLibPath, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel38, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jButton_autoconfiguration)
                .addGap(254, 254, 254))
        );

        jTabbedPane_Settings.addTab("Environment Settings", jPanel12);

        jPanel2.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jButton_CancelSettings.setText("Close");
        jButton_CancelSettings.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_CancelSettingsActionPerformed(evt);
            }
        });

        jButton_SaveSettings.setText("Save");
        jButton_SaveSettings.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_SaveSettingsActionPerformed(evt);
            }
        });

        jLabel_SettingsStatus.setForeground(new java.awt.Color(51, 153, 0));

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel_SettingsStatus, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButton_SaveSettings, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jButton_CancelSettings, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel_SettingsStatus, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(5, 5, 5))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(0, 1, Short.MAX_VALUE)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jButton_CancelSettings)
                            .addComponent(jButton_SaveSettings))))
                .addContainerGap())
        );

        javax.swing.GroupLayout jDialog_SettingsLayout = new javax.swing.GroupLayout(jDialog_Settings.getContentPane());
        jDialog_Settings.getContentPane().setLayout(jDialog_SettingsLayout);
        jDialog_SettingsLayout.setHorizontalGroup(
            jDialog_SettingsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jDialog_SettingsLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jDialog_SettingsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jTabbedPane_Settings)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jDialog_SettingsLayout.setVerticalGroup(
            jDialog_SettingsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jDialog_SettingsLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jTabbedPane_Settings, javax.swing.GroupLayout.PREFERRED_SIZE, 432, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jDialog_New.setTitle("New Script");
        jDialog_New.setIconImage(Toolkit.getDefaultToolkit().getImage(getClass().getResource("/halcyon/icons/logo.png")));

        jLabel39.setFont(new java.awt.Font("Dialog", 1, 11)); // NOI18N
        jLabel39.setText("Script Name:");
        jLabel39.setVerticalAlignment(javax.swing.SwingConstants.TOP);

        jLabel40.setFont(new java.awt.Font("Dialog", 1, 11)); // NOI18N
        jLabel40.setText("Script Description:");
        jLabel40.setVerticalAlignment(javax.swing.SwingConstants.TOP);

        jTextField_sName.setFont(new java.awt.Font("Dialog", 0, 11)); // NOI18N

        jTextArea_sDescription.setColumns(20);
        jTextArea_sDescription.setFont(new java.awt.Font("Dialog", 0, 11)); // NOI18N
        jTextArea_sDescription.setRows(5);
        jScrollPane9.setViewportView(jTextArea_sDescription);

        jButton_sBrowse1.setText("Browse");
        jButton_sBrowse1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_sBrowse1ActionPerformed(evt);
            }
        });

        jTextField_sAuthor.setFont(new java.awt.Font("Dialog", 0, 11)); // NOI18N

        jLabel41.setFont(new java.awt.Font("Dialog", 1, 11)); // NOI18N
        jLabel41.setText("Author Name:");
        jLabel41.setVerticalAlignment(javax.swing.SwingConstants.TOP);

        jComboBox_sService.setFont(new java.awt.Font("Dialog", 0, 11)); // NOI18N
        jComboBox_sService.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Default Port Rule", "21/tcp FTP", "22/tcp SSH", "23/tcp Telnet", "25/tcp SMTP", "53/udp DNS", "69/udp TFTP", "79/udp Finger", "80/tcp HTTP", "123/udp NTP", "161/udp SNMP", "443/tcp HTTPS", "513/tcp Login", "514/tcp Shell", "1433/tcp MSSQL", "1521/tcp Oracle", "3306/tcp MySQL" }));

        jLabel42.setFont(new java.awt.Font("Dialog", 1, 11)); // NOI18N
        jLabel42.setText("Service/Port");

        jList_sCategory.setFont(new java.awt.Font("Dialog", 0, 11)); // NOI18N
        jList_sCategory.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "auth", "broadcast", "brute", "default", "discovery", "dos", "exploit", "external", "fuzzer", "intrusive", "malware", "safe", "version", "vuln" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        jList_sCategory.setSelectedIndex(3);
        jScrollPane10.setViewportView(jList_sCategory);

        jLabel43.setFont(new java.awt.Font("Dialog", 1, 11)); // NOI18N
        jLabel43.setText("Script Category:");
        jLabel43.setVerticalAlignment(javax.swing.SwingConstants.TOP);

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jLabel42, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel41, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel39, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel40, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 121, Short.MAX_VALUE)
                    .addComponent(jLabel43, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane9, javax.swing.GroupLayout.PREFERRED_SIZE, 236, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jTextField_sName, javax.swing.GroupLayout.PREFERRED_SIZE, 236, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jTextField_sAuthor, javax.swing.GroupLayout.PREFERRED_SIZE, 236, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jComboBox_sService, javax.swing.GroupLayout.PREFERRED_SIZE, 236, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addComponent(jButton_sBrowse1))
                    .addComponent(jScrollPane10, javax.swing.GroupLayout.PREFERRED_SIZE, 236, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(32, Short.MAX_VALUE))
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel39, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jButton_sBrowse1)
                        .addComponent(jTextField_sName, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane9)
                    .addComponent(jLabel40, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextField_sAuthor, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel41, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel42, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jComboBox_sService))
                .addGap(18, 18, 18)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane10, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addComponent(jLabel43, javax.swing.GroupLayout.DEFAULT_SIZE, 123, Short.MAX_VALUE))
                .addContainerGap())
        );

        jButton_sCancel1.setText("Cancel");
        jButton_sCancel1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_sCancel1ActionPerformed(evt);
            }
        });

        jButton_sReset.setText("Reset");
        jButton_sReset.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_sResetActionPerformed(evt);
            }
        });

        jButton_sCreate1.setText("Create New");
        jButton_sCreate1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_sCreate1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel13Layout = new javax.swing.GroupLayout(jPanel13);
        jPanel13.setLayout(jPanel13Layout);
        jPanel13Layout.setHorizontalGroup(
            jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel13Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton_sCreate1)
                .addGap(18, 18, 18)
                .addComponent(jButton_sReset)
                .addGap(18, 18, 18)
                .addComponent(jButton_sCancel1)
                .addContainerGap())
            .addComponent(jSeparator16, javax.swing.GroupLayout.Alignment.TRAILING)
        );
        jPanel13Layout.setVerticalGroup(
            jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel13Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jSeparator16, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton_sCancel1)
                    .addComponent(jButton_sReset)
                    .addComponent(jButton_sCreate1))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jDialog_NewLayout = new javax.swing.GroupLayout(jDialog_New.getContentPane());
        jDialog_New.getContentPane().setLayout(jDialog_NewLayout);
        jDialog_NewLayout.setHorizontalGroup(
            jDialog_NewLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jDialog_NewLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jDialog_NewLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel13, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jDialog_NewLayout.setVerticalGroup(
            jDialog_NewLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jDialog_NewLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jPanel13, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Halcyon IDE 2.0.2");
        addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                formMouseClicked(evt);
            }
        });

        jToolBar1.setFloatable(false);
        jToolBar1.setRollover(true);

        jButton_new.setIcon(new javax.swing.ImageIcon(getClass().getResource("/halcyon/icons/icon-new.png"))); // NOI18N
        jButton_new.setToolTipText("New");
        jButton_new.setFocusable(false);
        jButton_new.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButton_new.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jButton_new.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_newActionPerformed(evt);
            }
        });
        jToolBar1.add(jButton_new);
        jButton_new.getAccessibleContext().setAccessibleDescription("Create New Script");

        jButton_open.setIcon(new javax.swing.ImageIcon(getClass().getResource("/halcyon/icons/icon-open.png"))); // NOI18N
        jButton_open.setToolTipText("Open");
        jButton_open.setFocusable(false);
        jButton_open.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButton_open.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jButton_open.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_openActionPerformed(evt);
            }
        });
        jToolBar1.add(jButton_open);
        jButton_open.getAccessibleContext().setAccessibleDescription("Open Script");

        jButton_save.setIcon(new javax.swing.ImageIcon(getClass().getResource("/halcyon/icons/icon-save.png"))); // NOI18N
        jButton_save.setToolTipText("Save");
        jButton_save.setFocusable(false);
        jButton_save.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButton_save.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jButton_save.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_saveActionPerformed(evt);
            }
        });
        jToolBar1.add(jButton_save);

        jButton_print.setIcon(new javax.swing.ImageIcon(getClass().getResource("/halcyon/icons/icon-print.png"))); // NOI18N
        jButton_print.setToolTipText("Print");
        jButton_print.setFocusable(false);
        jButton_print.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButton_print.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jButton_print.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_printActionPerformed(evt);
            }
        });
        jToolBar1.add(jButton_print);
        jToolBar1.add(jSeparator2);

        jButton_cut.setIcon(new javax.swing.ImageIcon(getClass().getResource("/halcyon/icons/icon-cut.png"))); // NOI18N
        jButton_cut.setToolTipText("Cut");
        jButton_cut.setFocusable(false);
        jButton_cut.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButton_cut.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jButton_cut.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_cutActionPerformed(evt);
            }
        });
        jToolBar1.add(jButton_cut);

        jButton_copy.setIcon(new javax.swing.ImageIcon(getClass().getResource("/halcyon/icons/icon-copy.png"))); // NOI18N
        jButton_copy.setToolTipText("Copy");
        jButton_copy.setFocusable(false);
        jButton_copy.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButton_copy.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jButton_copy.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_copyActionPerformed(evt);
            }
        });
        jToolBar1.add(jButton_copy);

        jButton_paste.setIcon(new javax.swing.ImageIcon(getClass().getResource("/halcyon/icons/icon-paste.png"))); // NOI18N
        jButton_paste.setMnemonic(KeyEvent.VK_V);
        jButton_paste.setToolTipText("Paste");
        jButton_paste.setFocusable(false);
        jButton_paste.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButton_paste.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jButton_paste.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_pasteActionPerformed(evt);
            }
        });
        jToolBar1.add(jButton_paste);

        jButton_undo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/halcyon/icons/icon-undo.png"))); // NOI18N
        jButton_undo.setToolTipText("Undo");
        jButton_undo.setFocusable(false);
        jButton_undo.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButton_undo.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jButton_undo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_undoActionPerformed(evt);
            }
        });
        jToolBar1.add(jButton_undo);

        jButton_find.setIcon(new javax.swing.ImageIcon(getClass().getResource("/halcyon/icons/icon-search.png"))); // NOI18N
        jButton_find.setToolTipText("Find");
        jButton_find.setFocusable(false);
        jButton_find.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButton_find.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jButton_find.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_findActionPerformed(evt);
            }
        });
        jToolBar1.add(jButton_find);
        jToolBar1.add(jSeparator3);

        jButton_scan.setIcon(new javax.swing.ImageIcon(getClass().getResource("/halcyon/icons/icon-play.png"))); // NOI18N
        jButton_scan.setToolTipText("Run Scan");
        jButton_scan.setFocusable(false);
        jButton_scan.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButton_scan.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jButton_scan.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jButton_scanMousePressed(evt);
            }
        });
        jButton_scan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_scanActionPerformed(evt);
            }
        });
        jToolBar1.add(jButton_scan);

        jButton_stop.setIcon(new javax.swing.ImageIcon(getClass().getResource("/halcyon/icons/icon-stop.png"))); // NOI18N
        jButton_stop.setToolTipText("Stop Scan");
        jButton_stop.setFocusable(false);
        jButton_stop.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButton_stop.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jButton_stop.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_stopActionPerformed(evt);
            }
        });
        jToolBar1.add(jButton_stop);
        jToolBar1.add(jSeparator11);

        jTextField_host.setText("scanme.nmap.org");
        jTextField_host.setMaximumSize(new java.awt.Dimension(200, 28));
        jToolBar1.add(jTextField_host);

        jTextField_port.setText("default");
        jTextField_port.setMaximumSize(new java.awt.Dimension(100, 28));
        jToolBar1.add(jTextField_port);
        jToolBar1.add(jSeparator4);

        jButton_settings.setIcon(new javax.swing.ImageIcon(getClass().getResource("/halcyon/icons/icon-cogs.png"))); // NOI18N
        jButton_settings.setToolTipText("Settings");
        jButton_settings.setFocusable(false);
        jButton_settings.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButton_settings.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jButton_settings.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_settingsActionPerformed(evt);
            }
        });
        jToolBar1.add(jButton_settings);

        jButton_about.setIcon(new javax.swing.ImageIcon(getClass().getResource("/halcyon/icons/icon-help.png"))); // NOI18N
        jButton_about.setToolTipText("About Halcyon");
        jButton_about.setFocusable(false);
        jButton_about.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButton_about.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jButton_about.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_aboutActionPerformed(evt);
            }
        });
        jToolBar1.add(jButton_about);
        jButton_about.getAccessibleContext().setAccessibleDescription("About Halcyon IDE");

        jToolBar2.setFloatable(false);
        jToolBar2.setRollover(true);

        jLabel_Status.setMaximumSize(new java.awt.Dimension(32767, 16));
        jToolBar2.add(jLabel_Status);

        jLabel10.setText("Scanning:");
        jToolBar2.add(jLabel10);
        jToolBar2.add(jSeparator5);

        jProgressBar_status.setMaximumSize(new java.awt.Dimension(100, 20));
        jProgressBar_status.setPreferredSize(new java.awt.Dimension(100, 20));
        jToolBar2.add(jProgressBar_status);

        jSplitPane_workspace.setDividerLocation(650);
        jSplitPane_workspace.setOrientation(javax.swing.JSplitPane.VERTICAL_SPLIT);
        jSplitPane_workspace.setOneTouchExpandable(true);
        jSplitPane_workspace.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jSplitPane_workspaceMouseClicked(evt);
            }
        });

        jSplitPane_workpane.setDividerLocation(300);
        jSplitPane_workpane.setMinimumSize(new java.awt.Dimension(106, 173));
        jSplitPane_workpane.setOneTouchExpandable(true);

        javax.swing.tree.DefaultMutableTreeNode treeNode1 = new javax.swing.tree.DefaultMutableTreeNode("!!! Error - Restart the application!!!");
        jTree_NSE.setModel(new javax.swing.tree.DefaultTreeModel(treeNode1));
        jTree_NSE.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTree_NSEMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(jTree_NSE);

        jTabbedPane1.addTab("Nmap Scripts", jScrollPane2);

        treeNode1 = new javax.swing.tree.DefaultMutableTreeNode("!!! Error - Restart the application!!!");
        jTree_NSEDATA.setModel(new javax.swing.tree.DefaultTreeModel(treeNode1));
        jTree_NSEDATA.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTree_NSEDATAMouseClicked(evt);
            }
        });
        jScrollPane3.setViewportView(jTree_NSEDATA);

        jTabbedPane1.addTab("NSE Data", jScrollPane3);

        treeNode1 = new javax.swing.tree.DefaultMutableTreeNode("!!! Error - Restart the application!!!");
        jTree_NSELIB.setModel(new javax.swing.tree.DefaultTreeModel(treeNode1));
        jTree_NSELIB.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTree_NSELIBMouseClicked(evt);
            }
        });
        jScrollPane4.setViewportView(jTree_NSELIB);

        jTabbedPane1.addTab("Nmap Libraries", jScrollPane4);

        jSplitPane_workpane.setLeftComponent(jTabbedPane1);

        jTabbedPane_workspace.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jTabbedPane_workspaceStateChanged(evt);
            }
        });
        jTabbedPane_workspace.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jTabbedPane_workspaceMousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                jTabbedPane_workspaceMouseReleased(evt);
            }
        });
        jSplitPane_workpane.setRightComponent(jTabbedPane_workspace);

        jSplitPane_workspace.setTopComponent(jSplitPane_workpane);

        jPanel_status.setMaximumSize(new java.awt.Dimension(32767, 50));
        jPanel_status.setPreferredSize(new java.awt.Dimension(575, 100));
        jPanel_status.setLayout(new javax.swing.BoxLayout(jPanel_status, javax.swing.BoxLayout.LINE_AXIS));

        jTextArea_output.setEditable(false);
        jTextArea_output.setColumns(20);
        jTextArea_output.setRows(5);
        jScrollPane1.setViewportView(jTextArea_output);

        jPanel_status.add(jScrollPane1);

        jSplitPane_workspace.setBottomComponent(jPanel_status);

        jMenu_File.setText("File");

        jMenuItem_New.setText("New");
        jMenuItem_New.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem_NewActionPerformed(evt);
            }
        });
        jMenu_File.add(jMenuItem_New);

        jMenuItem_Open.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_O, java.awt.event.InputEvent.CTRL_MASK));
        jMenuItem_Open.setText("Open");
        jMenuItem_Open.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem_OpenActionPerformed(evt);
            }
        });
        jMenu_File.add(jMenuItem_Open);

        jMenuItem_Save.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_S, java.awt.event.InputEvent.CTRL_MASK));
        jMenuItem_Save.setText("Save");
        jMenuItem_Save.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem_SaveActionPerformed(evt);
            }
        });
        jMenu_File.add(jMenuItem_Save);

        jMenuItem_SaveAs.setText("Save As..");
        jMenuItem_SaveAs.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem_SaveAsActionPerformed(evt);
            }
        });
        jMenu_File.add(jMenuItem_SaveAs);

        jMenuItem_Close.setText("Close");
        jMenuItem_Close.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem_CloseActionPerformed(evt);
            }
        });
        jMenu_File.add(jMenuItem_Close);
        jMenu_File.add(jSeparator1);

        jMenuItem_exportScript.setText("Export Script");
        jMenuItem_exportScript.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem_exportScriptActionPerformed(evt);
            }
        });
        jMenu_File.add(jMenuItem_exportScript);

        jMenuItem_updateScriptDB.setText("Update Script DB");
        jMenuItem_updateScriptDB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem_updateScriptDBActionPerformed(evt);
            }
        });
        jMenu_File.add(jMenuItem_updateScriptDB);
        jMenu_File.add(jSeparator8);

        jMenuItem_print.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_P, java.awt.event.InputEvent.CTRL_MASK));
        jMenuItem_print.setText("Print");
        jMenuItem_print.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem_printActionPerformed(evt);
            }
        });
        jMenu_File.add(jMenuItem_print);

        jMenuItem_Exit.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_Q, java.awt.event.InputEvent.CTRL_MASK));
        jMenuItem_Exit.setText("Exit");
        jMenuItem_Exit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem_ExitActionPerformed(evt);
            }
        });
        jMenu_File.add(jMenuItem_Exit);

        jMenuBar1.add(jMenu_File);

        jMenu_Edit.setText("Edit");

        jMenuItem_cut.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_X, java.awt.event.InputEvent.CTRL_MASK));
        jMenuItem_cut.setText("Cut");
        jMenuItem_cut.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem_cutActionPerformed(evt);
            }
        });
        jMenu_Edit.add(jMenuItem_cut);

        jMenuItem_copy.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_C, java.awt.event.InputEvent.CTRL_MASK));
        jMenuItem_copy.setText("Copy");
        jMenuItem_copy.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem_copyActionPerformed(evt);
            }
        });
        jMenu_Edit.add(jMenuItem_copy);

        jMenuItem_paste.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_V, java.awt.event.InputEvent.CTRL_MASK));
        jMenuItem_paste.setText("Paste");
        jMenuItem_paste.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem_pasteActionPerformed(evt);
            }
        });
        jMenu_Edit.add(jMenuItem_paste);

        jMenuItem_undo.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_Z, java.awt.event.InputEvent.CTRL_MASK));
        jMenuItem_undo.setText("Undo");
        jMenuItem_undo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem_undoActionPerformed(evt);
            }
        });
        jMenu_Edit.add(jMenuItem_undo);
        jMenu_Edit.add(jSeparator6);

        jMenuItem_find.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_F3, java.awt.event.InputEvent.CTRL_MASK));
        jMenuItem_find.setText("Find");
        jMenuItem_find.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem_findActionPerformed(evt);
            }
        });
        jMenu_Edit.add(jMenuItem_find);

        jMenuBar1.add(jMenu_Edit);

        jMenu_Proj.setText("Project");

        jMenuItem_run.setText("Run");
        jMenuItem_run.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem_runActionPerformed(evt);
            }
        });
        jMenu_Proj.add(jMenuItem_run);

        jMenuItem_stop.setText("Stop");
        jMenuItem_stop.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem_stopActionPerformed(evt);
            }
        });
        jMenu_Proj.add(jMenuItem_stop);

        jMenu_codegen.setText("Code Generator");

        jMenuItem_afpHelper.setText("AFP Helper");
        jMenuItem_afpHelper.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem_afpHelperActionPerformed(evt);
            }
        });
        jMenu_codegen.add(jMenuItem_afpHelper);

        jMenuItem_bittorrent.setText("Bittorrent");
        jMenuItem_bittorrent.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem_bittorrentActionPerformed(evt);
            }
        });
        jMenu_codegen.add(jMenuItem_bittorrent);

        jMenu1.setText("Brute");

        jMenuItem_bruteDriver.setText("Driver");
        jMenuItem_bruteDriver.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem_bruteDriverActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem_bruteDriver);

        jMenuItem_bruteEngine.setText("Engine");
        jMenuItem_bruteEngine.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem_bruteEngineActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem_bruteEngine);

        jMenu_codegen.add(jMenu1);

        jMenu2.setText("Credentials");

        jMenuItem_CredToDB.setText("Store to DB");
        jMenuItem_CredToDB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem_CredToDBActionPerformed(evt);
            }
        });
        jMenu2.add(jMenuItem_CredToDB);

        jMenuItem_CredToCSV.setText("Store to CSV");
        jMenuItem_CredToCSV.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem_CredToCSVActionPerformed(evt);
            }
        });
        jMenu2.add(jMenuItem_CredToCSV);

        jMenu_codegen.add(jMenu2);

        jMenu3.setText("Database");

        jMenuItem_mssqlQ.setText("MSSQL Query");
        jMenuItem_mssqlQ.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem_mssqlQActionPerformed(evt);
            }
        });
        jMenu3.add(jMenuItem_mssqlQ);

        jMenu_codegen.add(jMenu3);

        jMenuItem_dhcp6.setText("DHCP6");
        jMenuItem_dhcp6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem_dhcp6ActionPerformed(evt);
            }
        });
        jMenu_codegen.add(jMenuItem_dhcp6);

        jMenu4.setText("DNS");

        jMenuItem_dnsQ.setText("Query");
        jMenuItem_dnsQ.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem_dnsQActionPerformed(evt);
            }
        });
        jMenu4.add(jMenuItem_dnsQ);

        jMenuItem_dnsBList.setText("Blacklist");
        jMenuItem_dnsBList.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem_dnsBListActionPerformed(evt);
            }
        });
        jMenu4.add(jMenuItem_dnsBList);

        jMenuItem_dnssd.setText("Service Discovery");
        jMenuItem_dnssd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem_dnssdActionPerformed(evt);
            }
        });
        jMenu4.add(jMenuItem_dnssd);

        jMenu_codegen.add(jMenu4);

        jMenuItem_drda.setText("DRDA");
        jMenuItem_drda.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem_drdaActionPerformed(evt);
            }
        });
        jMenu_codegen.add(jMenuItem_drda);

        jMenuItem_EAP.setText("EAP");
        jMenuItem_EAP.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem_EAPActionPerformed(evt);
            }
        });
        jMenu_codegen.add(jMenuItem_EAP);

        jMenuItem_goip.setText("GoIP");
        jMenuItem_goip.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem_goipActionPerformed(evt);
            }
        });
        jMenu_codegen.add(jMenuItem_goip);

        jMenu5.setText("HTTP");

        jMenuItem_HTTPspider.setText("Spider");
        jMenuItem_HTTPspider.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem_HTTPspiderActionPerformed(evt);
            }
        });
        jMenu5.add(jMenuItem_HTTPspider);

        jMenu_codegen.add(jMenu5);

        jMenuItem_imap.setText("IMAP");
        jMenuItem_imap.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem_imapActionPerformed(evt);
            }
        });
        jMenu_codegen.add(jMenuItem_imap);

        jMenuItem_informix.setText("Informix");
        jMenuItem_informix.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem_informixActionPerformed(evt);
            }
        });
        jMenu_codegen.add(jMenuItem_informix);

        jMenuItem_JDWP.setText("JDWP");
        jMenuItem_JDWP.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem_JDWPActionPerformed(evt);
            }
        });
        jMenu_codegen.add(jMenuItem_JDWP);

        jMenuItem_ncp.setText("NCP");
        jMenuItem_ncp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem_ncpActionPerformed(evt);
            }
        });
        jMenu_codegen.add(jMenuItem_ncp);

        jMenuItem_openssl.setText("OpenSSL");
        jMenuItem_openssl.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem_opensslActionPerformed(evt);
            }
        });
        jMenu_codegen.add(jMenuItem_openssl);

        jMenu6.setText("RPC");

        jMenuItem_nrpc.setText("NRPC");
        jMenuItem_nrpc.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem_nrpcActionPerformed(evt);
            }
        });
        jMenu6.add(jMenuItem_nrpc);

        jMenuItem_rpc.setText("RPC");
        jMenuItem_rpc.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem_rpcActionPerformed(evt);
            }
        });
        jMenu6.add(jMenuItem_rpc);

        jMenu_codegen.add(jMenu6);

        jMenu7.setText("Socket");

        jMenuItem_socketConnSend.setText("Connect and Send");
        jMenuItem_socketConnSend.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem_socketConnSendActionPerformed(evt);
            }
        });
        jMenu7.add(jMenuItem_socketConnSend);

        jMenu_codegen.add(jMenu7);

        jMenuItem_tftp.setText("TFTP");
        jMenuItem_tftp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem_tftpActionPerformed(evt);
            }
        });
        jMenu_codegen.add(jMenuItem_tftp);

        jMenuItem_xamp.setText("XAMP");
        jMenuItem_xamp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem_xampActionPerformed(evt);
            }
        });
        jMenu_codegen.add(jMenuItem_xamp);

        jMenu_Proj.add(jMenu_codegen);
        jMenu_Proj.add(jSeparator7);

        jMenuItem_Settings.setText("Settings");
        jMenuItem_Settings.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem_SettingsActionPerformed(evt);
            }
        });
        jMenu_Proj.add(jMenuItem_Settings);

        jMenuBar1.add(jMenu_Proj);

        jMenu_Help.setText("Help");

        jMenuItem_HelpGettingStarting.setText("Getting Started");
        jMenuItem_HelpGettingStarting.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem_HelpGettingStartingActionPerformed(evt);
            }
        });
        jMenu_Help.add(jMenuItem_HelpGettingStarting);

        jMenuItem_HelpNSEDoc.setText("Nmap Script Documentation");
        jMenuItem_HelpNSEDoc.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem_HelpNSEDocActionPerformed(evt);
            }
        });
        jMenu_Help.add(jMenuItem_HelpNSEDoc);
        jMenu_Help.add(jSeparator9);

        jMenuItem_HelpAbout.setText("About");
        jMenuItem_HelpAbout.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem_HelpAboutActionPerformed(evt);
            }
        });
        jMenu_Help.add(jMenuItem_HelpAbout);

        jMenuItem_HelpReportBugs.setText("Report Bugs");
        jMenuItem_HelpReportBugs.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem_HelpReportBugsActionPerformed(evt);
            }
        });
        jMenu_Help.add(jMenuItem_HelpReportBugs);

        jMenuBar1.add(jMenu_Help);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jToolBar1, javax.swing.GroupLayout.DEFAULT_SIZE, 1005, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jToolBar2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
            .addComponent(jSplitPane_workspace)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jToolBar1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSplitPane_workspace, javax.swing.GroupLayout.DEFAULT_SIZE, 500, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jToolBar2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        getAccessibleContext().setAccessibleDescription("IDE for Nmap Script Developers");

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jMenuItem_ExitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem_ExitActionPerformed
        // TODO add your handling code here:
        this.dispose();
    }//GEN-LAST:event_jMenuItem_ExitActionPerformed

    private void jButton_settingsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_settingsActionPerformed
        // TODO add your handling code here:
        jDialog_Settings.pack();
        jDialog_Settings.setLocationRelativeTo(null);
        jTabbedPane_Settings.setSelectedIndex(0);
        jDialog_Settings.setVisible(true);
    }//GEN-LAST:event_jButton_settingsActionPerformed

    private void jButton_newActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_newActionPerformed
        // TODO add your handling code here:
        jDialog_New.pack();
        jDialog_New.setLocationRelativeTo(null);
        jDialog_New.setVisible(true);
        resetNewProjUI();
    }//GEN-LAST:event_jButton_newActionPerformed

    private void jMenuItem_NewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem_NewActionPerformed
        // TODO add your handling code here:
        jDialog_New.pack();
        jDialog_New.setLocationRelativeTo(null); 
        jDialog_New.setVisible(true);
        resetNewProjUI();
    }//GEN-LAST:event_jMenuItem_NewActionPerformed

    private void jButton_openActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_openActionPerformed
        // TODO add your handling code here:
        openScript();
    }//GEN-LAST:event_jButton_openActionPerformed

    private void jMenuItem_OpenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem_OpenActionPerformed
        // TODO add your handling code here:
        openScript();
    }//GEN-LAST:event_jMenuItem_OpenActionPerformed

    private void jMenuItem_CloseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem_CloseActionPerformed
        // TODO add your handling code here:
        jTabbedPane_workspace.remove(jTabbedPane_workspace.getSelectedComponent());
    }//GEN-LAST:event_jMenuItem_CloseActionPerformed

    private void jTabbedPane_workspaceStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_jTabbedPane_workspaceStateChanged
        // TODO add your handling code here:
        if(jTabbedPane_workspace.getSelectedIndex()>-1){
            jLabel_Status.setText(jTabbedPane_workspace.getTitleAt(jTabbedPane_workspace.getSelectedIndex()));
            hb.setPath(jTabbedPane_workspace.getTitleAt(jTabbedPane_workspace.getSelectedIndex()));
        }
       
        
    }//GEN-LAST:event_jTabbedPane_workspaceStateChanged

    private void jMenuItem_SaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem_SaveActionPerformed
        // TODO add your handling code here:
        saveScript();
    }//GEN-LAST:event_jMenuItem_SaveActionPerformed

    private void jMenuItem_SaveAsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem_SaveAsActionPerformed
        // TODO add your handling code here:
        saveAS();
    }//GEN-LAST:event_jMenuItem_SaveAsActionPerformed

    private void jButton_saveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_saveActionPerformed
        // TODO add your handling code here:
        saveScript();
    }//GEN-LAST:event_jButton_saveActionPerformed

    private void jButton_cutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_cutActionPerformed
        // TODO add your handling code here:
        //jTabbedPane_workspace.getSelectedIndex()
        JScrollPane scroll = (JScrollPane)jTabbedPane_workspace.getSelectedComponent();
        JTextArea area = (JTextArea)scroll.getViewport().getView();
        area.cut();
    }//GEN-LAST:event_jButton_cutActionPerformed

    private void jButton_pasteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_pasteActionPerformed
        // TODO add your handling code here:
        JScrollPane scroll = (JScrollPane)jTabbedPane_workspace.getSelectedComponent();
        JTextArea area = (JTextArea)scroll.getViewport().getView();
        area.paste();
    }//GEN-LAST:event_jButton_pasteActionPerformed

    private void jButton_copyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_copyActionPerformed
        // TODO add your handling code here:
        JScrollPane scroll = (JScrollPane)jTabbedPane_workspace.getSelectedComponent();
        JTextArea area = (JTextArea)scroll.getViewport().getView();
        area.copy();
    }//GEN-LAST:event_jButton_copyActionPerformed

    private void jButton_undoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_undoActionPerformed
        // TODO add your handling code here:
        undoManager.undo();
    }//GEN-LAST:event_jButton_undoActionPerformed

    private void jMenuItem_cutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem_cutActionPerformed
        // TODO add your handling code here:
        JScrollPane scroll = (JScrollPane)jTabbedPane_workspace.getSelectedComponent();
        JTextArea area = (JTextArea)scroll.getViewport().getView();
        area.cut();
    }//GEN-LAST:event_jMenuItem_cutActionPerformed

    private void jMenuItem_copyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem_copyActionPerformed
        // TODO add your handling code here:
        JScrollPane scroll = (JScrollPane)jTabbedPane_workspace.getSelectedComponent();
        JTextArea area = (JTextArea)scroll.getViewport().getView();
        area.copy();
    }//GEN-LAST:event_jMenuItem_copyActionPerformed

    private void jMenuItem_pasteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem_pasteActionPerformed
        // TODO add your handling code here:
        JScrollPane scroll = (JScrollPane)jTabbedPane_workspace.getSelectedComponent();
        JTextArea area = (JTextArea)scroll.getViewport().getView();
        area.paste();
    }//GEN-LAST:event_jMenuItem_pasteActionPerformed

    private void jMenuItem_undoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem_undoActionPerformed
        // TODO add your handling code here:
        undoManager.undo();
    }//GEN-LAST:event_jMenuItem_undoActionPerformed

    private void jButton_printActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_printActionPerformed
        // TODO add your handling code here:
        printScript();
    }//GEN-LAST:event_jButton_printActionPerformed

    private void jMenuItem_printActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem_printActionPerformed
        // TODO add your handling code here:
        printScript();
    }//GEN-LAST:event_jMenuItem_printActionPerformed

    private void jButton_findActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_findActionPerformed
        // TODO add your handling code here:
        jDialog_SearchBox.pack();
        jDialog_SearchBox.setLocationRelativeTo(null);
        jDialog_SearchBox.setVisible(true);
    }//GEN-LAST:event_jButton_findActionPerformed

    private void jButton_scanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_scanActionPerformed
        // TODO add your handling code here:
        startScan(); 
    }//GEN-LAST:event_jButton_scanActionPerformed

    private void jButton_stopActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_stopActionPerformed
        // TODO add your handling code here:
        killScan();
    }//GEN-LAST:event_jButton_stopActionPerformed

    private void jButton_scanMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton_scanMousePressed
        // TODO add your handling code here: 
    }//GEN-LAST:event_jButton_scanMousePressed

    private void jMenuItem_afpHelperActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem_afpHelperActionPerformed
        // TODO add your handling code here:
        pushCode(hb.getafpHelper());
    }//GEN-LAST:event_jMenuItem_afpHelperActionPerformed

    private void jMenuItem_bittorrentActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem_bittorrentActionPerformed
        // TODO add your handling code here:
        pushCode(hb.getBittorrent());
    }//GEN-LAST:event_jMenuItem_bittorrentActionPerformed

    private void jMenuItem_bruteDriverActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem_bruteDriverActionPerformed
        // TODO add your handling code here:
        pushCode(hb.getBruteDriver());
    }//GEN-LAST:event_jMenuItem_bruteDriverActionPerformed

    private void jMenuItem_bruteEngineActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem_bruteEngineActionPerformed
        // TODO add your handling code here:
        pushCode(hb.getBruteEngine());
    }//GEN-LAST:event_jMenuItem_bruteEngineActionPerformed

    private void jMenuItem_CredToDBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem_CredToDBActionPerformed
        // TODO add your handling code here:
        pushCode(hb.getCredtoDB());
    }//GEN-LAST:event_jMenuItem_CredToDBActionPerformed

    private void jMenuItem_CredToCSVActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem_CredToCSVActionPerformed
        // TODO add your handling code here:
        pushCode(hb.getCredtoCSV());
    }//GEN-LAST:event_jMenuItem_CredToCSVActionPerformed

    private void jMenuItem_mssqlQActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem_mssqlQActionPerformed
        // TODO add your handling code here:
        pushCode(hb.getMSSQLquery());
    }//GEN-LAST:event_jMenuItem_mssqlQActionPerformed

    private void jMenuItem_dhcp6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem_dhcp6ActionPerformed
        // TODO add your handling code here:
        pushCode(hb.getDHCP6());
    }//GEN-LAST:event_jMenuItem_dhcp6ActionPerformed

    private void jMenuItem_dnsQActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem_dnsQActionPerformed
        // TODO add your handling code here:
        pushCode(hb.getDNSQuery());
    }//GEN-LAST:event_jMenuItem_dnsQActionPerformed

    private void jMenuItem_dnsBListActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem_dnsBListActionPerformed
        // TODO add your handling code here:
        pushCode(hb.getDNSbl());
    }//GEN-LAST:event_jMenuItem_dnsBListActionPerformed

    private void jMenuItem_dnssdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem_dnssdActionPerformed
        // TODO add your handling code here:
        pushCode(hb.getDNSsd());
    }//GEN-LAST:event_jMenuItem_dnssdActionPerformed

    private void jMenuItem_drdaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem_drdaActionPerformed
        // TODO add your handling code here:
        pushCode(hb.getDRDA());
    }//GEN-LAST:event_jMenuItem_drdaActionPerformed

    private void jMenuItem_EAPActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem_EAPActionPerformed
        // TODO add your handling code here:
        pushCode(hb.getEAP());
    }//GEN-LAST:event_jMenuItem_EAPActionPerformed

    private void jMenuItem_goipActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem_goipActionPerformed
        // TODO add your handling code here:
        pushCode(hb.getGOIP());
    }//GEN-LAST:event_jMenuItem_goipActionPerformed

    private void jMenuItem_HTTPspiderActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem_HTTPspiderActionPerformed
        // TODO add your handling code here:
        pushCode(hb.getHTTPSpider());
    }//GEN-LAST:event_jMenuItem_HTTPspiderActionPerformed

    private void jMenuItem_imapActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem_imapActionPerformed
        // TODO add your handling code here:
        pushCode(hb.getIMAP());
    }//GEN-LAST:event_jMenuItem_imapActionPerformed

    private void jMenuItem_informixActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem_informixActionPerformed
        // TODO add your handling code here:
        pushCode(hb.getInformix());
    }//GEN-LAST:event_jMenuItem_informixActionPerformed

    private void jMenuItem_JDWPActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem_JDWPActionPerformed
        // TODO add your handling code here:
        pushCode(hb.getJDWP());
    }//GEN-LAST:event_jMenuItem_JDWPActionPerformed

    private void jMenuItem_ncpActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem_ncpActionPerformed
        // TODO add your handling code here:
        pushCode(hb.getNCP());
    }//GEN-LAST:event_jMenuItem_ncpActionPerformed

    private void jMenuItem_nrpcActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem_nrpcActionPerformed
        // TODO add your handling code here:
        pushCode(hb.getNRPC());
    }//GEN-LAST:event_jMenuItem_nrpcActionPerformed

    private void jMenuItem_opensslActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem_opensslActionPerformed
        // TODO add your handling code here:
        pushCode(hb.getOpenssl());
    }//GEN-LAST:event_jMenuItem_opensslActionPerformed

    private void jMenuItem_rpcActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem_rpcActionPerformed
        // TODO add your handling code here:
        pushCode(hb.getRPC());
    }//GEN-LAST:event_jMenuItem_rpcActionPerformed

    private void jMenuItem_socketConnSendActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem_socketConnSendActionPerformed
        // TODO add your handling code here:
        pushCode(hb.getSockConnect());
    }//GEN-LAST:event_jMenuItem_socketConnSendActionPerformed

    private void jMenuItem_tftpActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem_tftpActionPerformed
        // TODO add your handling code here:
        pushCode(hb.getTftp());
    }//GEN-LAST:event_jMenuItem_tftpActionPerformed

    private void jMenuItem_xampActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem_xampActionPerformed
        // TODO add your handling code here:
        pushCode(hb.getXamp());
    }//GEN-LAST:event_jMenuItem_xampActionPerformed

    private void jTree_NSEMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTree_NSEMouseClicked
        // TODO add your handling code here:
        try {
            if(evt.getClickCount()==2){
                TreePath tp = jTree_NSE.getClosestPathForLocation(evt.getX(), evt.getY());
                File f = (File)tp.getLastPathComponent();
                openTreeNode(f);
            }
        } catch (Exception e) {
            JOptionPane.showConfirmDialog(null,"Error in opening file. Try again with valid file", "Error", JOptionPane.PLAIN_MESSAGE);
        }
    }//GEN-LAST:event_jTree_NSEMouseClicked

    private void jTree_NSEDATAMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTree_NSEDATAMouseClicked
        // TODO add your handling code here:
        try {
            if(evt.getClickCount()==2){
                TreePath tp = jTree_NSEDATA.getClosestPathForLocation(evt.getX(), evt.getY());
                File f = (File)tp.getLastPathComponent();
                openTreeNode(f);
            }
        } catch (Exception e) {
            JOptionPane.showConfirmDialog(null,"Error in opening file. Try again with valid file", "Error", JOptionPane.PLAIN_MESSAGE);
        }
    }//GEN-LAST:event_jTree_NSEDATAMouseClicked

    private void jTree_NSELIBMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTree_NSELIBMouseClicked
        // TODO add your handling code here:
        try {
            if(evt.getClickCount()==2){
                TreePath tp = jTree_NSELIB.getClosestPathForLocation(evt.getX(), evt.getY());
                File f = (File)tp.getLastPathComponent();
                openTreeNode(f);
            }
        } catch (Exception e) {
            JOptionPane.showConfirmDialog(null,"Error in opening file. Try again with valid file", "Error", JOptionPane.PLAIN_MESSAGE);
        }
    }//GEN-LAST:event_jTree_NSELIBMouseClicked

    private void jTabbedPane_workspaceMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTabbedPane_workspaceMousePressed
        // TODO add your handling code here:
        if(evt.isPopupTrigger()) jPopupMenu1.show(jTabbedPane_workspace,evt.getX(),evt.getY());
    }//GEN-LAST:event_jTabbedPane_workspaceMousePressed

    private void jTabbedPane_workspaceMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTabbedPane_workspaceMouseReleased
        // TODO add your handling code here:
        if(evt.isPopupTrigger()) jPopupMenu1.show(jTabbedPane_workspace,evt.getX(),evt.getY());
    }//GEN-LAST:event_jTabbedPane_workspaceMouseReleased

    private void jMenuItem_closeWorkSpaceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem_closeWorkSpaceActionPerformed
        // TODO add your handling code here:
        jTabbedPane_workspace.remove(jTabbedPane_workspace.getSelectedComponent());
    }//GEN-LAST:event_jMenuItem_closeWorkSpaceActionPerformed

    private void jMenuItem_closeAllActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem_closeAllActionPerformed
        // TODO add your handling code here:
        jTabbedPane_workspace.removeAll();
    }//GEN-LAST:event_jMenuItem_closeAllActionPerformed

    private void jMenuItem_findActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem_findActionPerformed
        // TODO add your handling code here:
        jDialog_SearchBox.pack();
        jDialog_SearchBox.setLocationRelativeTo(null);
        jDialog_SearchBox.setVisible(true);
    }//GEN-LAST:event_jMenuItem_findActionPerformed

    private void jMenuItem_HelpAboutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem_HelpAboutActionPerformed
        // TODO add your handling code here:
        showAbout(); 
        
    }//GEN-LAST:event_jMenuItem_HelpAboutActionPerformed

    private void jButton_aboutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_aboutActionPerformed
        // TODO add your handling code here:
        showAbout();
    }//GEN-LAST:event_jButton_aboutActionPerformed

    private void jMenuItem_stopActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem_stopActionPerformed
        // TODO add your handling code here:
        killScan();
    }//GEN-LAST:event_jMenuItem_stopActionPerformed

    private void jMenuItem_runActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem_runActionPerformed
        // TODO add your handling code here:
        startScan();
    }//GEN-LAST:event_jMenuItem_runActionPerformed

    private void jMenuItem_SettingsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem_SettingsActionPerformed
        // TODO add your handling code here:
        jDialog_Settings.pack();
        jDialog_Settings.setLocationRelativeTo(null);
        jDialog_Settings.setVisible(true); 
    }//GEN-LAST:event_jMenuItem_SettingsActionPerformed

    private void jMenuItem_exportScriptActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem_exportScriptActionPerformed
        // TODO add your handling code here:
        jProgressBar_status.setIndeterminate(true);
        exportScript();
    }//GEN-LAST:event_jMenuItem_exportScriptActionPerformed

    private void jMenuItem_updateScriptDBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem_updateScriptDBActionPerformed
        // TODO add your handling code here:
        updateScriptDB();
    }//GEN-LAST:event_jMenuItem_updateScriptDBActionPerformed

    private void jPanel8MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanel8MouseClicked
        // TODO add your handling code here:
        jDialog_About.dispose();
    }//GEN-LAST:event_jPanel8MouseClicked

    private void formMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_formMouseClicked
        // TODO add your handling code here:
        jDialog_About.dispose();
    }//GEN-LAST:event_formMouseClicked

    private void jSplitPane_workspaceMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jSplitPane_workspaceMouseClicked
        // TODO add your handling code here:
        jDialog_About.dispose();
    }//GEN-LAST:event_jSplitPane_workspaceMouseClicked

    private void jButton_autoconfigurationActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_autoconfigurationActionPerformed
        String npath ="", nse="", lib = "";
        boolean flag = false;
        try{  
            //  detecting possible class paths depends on OS. 
            String os = System.getProperty("os.name");
            if(os.contains("Mac OS X")){
                // identifying common linux paths
                npath = "/usr/local/bin/nmap";
                nse = "/usr/local/share/nmap/scripts/";
                lib = "/usr/local/share/nmap/nselib/";
                flag = true;
            }else if(os.contains("Windows")){
                String p=null;
                // searching environment variables
                String path = System.getenv("PATH");
                String[] paths = path.split(";"); 
                for (String path1 : paths) {
                    if (path1.contains("Nmap") || path1.contains("nmap")) { 
                        //found class paths from environment variables.  
                        npath = path1+"\\nmap";
                        nse = path1+"\\scripts\\";
                        lib = path1+"\\nselib\\";
                        flag = true;
                    }
                }
                File f = new File(System.getenv("ProgramFiles")+"\\Nmap");
                if((new File(System.getenv("ProgramFiles")+"\\Nmap")).exists()){
                    p = System.getenv("ProgramFiles");
                }else if((new File(System.getenv("ProgramFiles(X86)")+"\\Nmap")).exists()){
                    p = System.getenv("ProgramFiles(X86)");
                }
                if(!p.isEmpty()){
                    npath = p+"\\Nmap\\nmap.exe";
                    nse = p+"\\Nmap\\scripts\\";
                    lib = p+"\\Nmap\\nselib\\";
                    flag = true;
                }  
            }else if(os.contains("Linux")){
                npath = "/usr/bin/nmap";
                nse = "/usr/share/nmap/scripts/";
                lib = "/usr/share/nmap/nselib/";
                flag = true;
            } 
            
            if(flag){
                File isNPATH = new File(npath);
                File isNSE = new File(nse);
                File isLIB = new File(lib);
                if(isNPATH.exists() && isNSE.exists() && isLIB.exists()){
                    jTextField_envEpath.setText(npath);
                    jTextField_envSpath.setText(nse);
                    jTextField_envLpath.setText(lib); 
                }else{
                   JOptionPane.showConfirmDialog(jDialog_Settings,"Autoconfiguration failed because one or more files are not found or invalid. Please configure manually by clicking corresponding edit buttons.", "Warning", JOptionPane.PLAIN_MESSAGE);  
                } 
            }else{
                JOptionPane.showConfirmDialog(jDialog_Settings,"Autoconfiguration failed. Please configure manually by clicking corresponding edit buttons.", "Warning", JOptionPane.PLAIN_MESSAGE);  
            }
         
        }catch(NullPointerException e){
            String error = "<html>Unable to find the nmap location.<br>Please configure it manually.</html>";
            int done = JOptionPane.showConfirmDialog(jDialog_Settings,error, "Error !!",JOptionPane.OK_OPTION);
        }
    }//GEN-LAST:event_jButton_autoconfigurationActionPerformed

    private void jDialog_SettingsWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_jDialog_SettingsWindowOpened
        loadEnv();
    }//GEN-LAST:event_jDialog_SettingsWindowOpened

    private void jButton_CancelSettingsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_CancelSettingsActionPerformed
        loadEnv();
        jDialog_Settings.dispose();
        //jDialog_Settings.setVisible(false);
    }//GEN-LAST:event_jButton_CancelSettingsActionPerformed

    private void jButton_BrowseNmapPathActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_BrowseNmapPathActionPerformed
        jFileChooser1.setCurrentDirectory(new File(System.getProperty("user.home")));
        jFileChooser1.setDialogTitle("Choose Nmap Executable");
        jFileChooser1.setFileSelectionMode(jFileChooser1.FILES_ONLY);
        jFileChooser1.setMultiSelectionEnabled(false);
        int option = jFileChooser1.showOpenDialog(jDialog_Settings);
        if(option == jFileChooser1.APPROVE_OPTION){
            File f = jFileChooser1.getSelectedFile();
            jTextField_envEpath.setText(f.getAbsolutePath()); 
        }
    }//GEN-LAST:event_jButton_BrowseNmapPathActionPerformed

    private void jButton_BrowseNSEPathActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_BrowseNSEPathActionPerformed
        jFileChooser1.setCurrentDirectory(new File(System.getProperty("user.home")));
        jFileChooser1.setDialogTitle("Choose Nmap Script Path");
        jFileChooser1.setFileSelectionMode(jFileChooser1.DIRECTORIES_ONLY);
        jFileChooser1.setMultiSelectionEnabled(false);
        int option = jFileChooser1.showOpenDialog(jDialog_Settings);
        if(option == jFileChooser1.APPROVE_OPTION){
            File f = jFileChooser1.getSelectedFile();
            jTextField_envSpath.setText(f.getAbsolutePath()); 
        }
    }//GEN-LAST:event_jButton_BrowseNSEPathActionPerformed

    private void jButton_BrowseLibPathActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_BrowseLibPathActionPerformed
        jFileChooser1.setCurrentDirectory(new File(System.getProperty("user.home")));
        jFileChooser1.setDialogTitle("Choose Nmap Library Path");
        jFileChooser1.setFileSelectionMode(jFileChooser1.DIRECTORIES_ONLY);
        jFileChooser1.setMultiSelectionEnabled(false);
        int option = jFileChooser1.showOpenDialog(jDialog_Settings);
        if(option == jFileChooser1.APPROVE_OPTION){
            File f = jFileChooser1.getSelectedFile();
            jTextField_envLpath.setText(f.getAbsolutePath()); 
        }
    }//GEN-LAST:event_jButton_BrowseLibPathActionPerformed

    private void jCheckBox_ArgSettingsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox_ArgSettingsActionPerformed
        if(jCheckBox_ArgSettings.isSelected()){
            jCheckBox_ArgFileSettings.setSelected(false);
            jTextField_ScriptArgsFileSettings.setText("");
            jTextField_ScriptArgsFileSettings.setEditable(false);
            jTextField_ScriptArgsFileSettings.setEnabled(false);
            jButton_ArgFileBrowse.setEnabled(false);
            jTextField_ScriptArgsSettings.setEditable(true);
            jTextField_ScriptArgsSettings.setEnabled(true);
            
        }else{
            jTextField_ScriptArgsSettings.setEditable(false);
            jTextField_ScriptArgsSettings.setEnabled(false);
            jTextField_ScriptArgsSettings.setText("");
            
        }
    }//GEN-LAST:event_jCheckBox_ArgSettingsActionPerformed

    private void jCheckBox_ArgFileSettingsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox_ArgFileSettingsActionPerformed
        if(jCheckBox_ArgFileSettings.isSelected()){
            jCheckBox_ArgSettings.setSelected(false);
            jTextField_ScriptArgsSettings.setText("");
            jButton_ArgFileBrowse.setEnabled(true);
            jTextField_ScriptArgsFileSettings.setEditable(true);
            jTextField_ScriptArgsFileSettings.setEnabled(true);
            jTextField_ScriptArgsSettings.setEditable(false);
            jTextField_ScriptArgsSettings.setEnabled(false);
        }else{
            jTextField_ScriptArgsFileSettings.setEditable(false);
            jTextField_ScriptArgsFileSettings.setEnabled(false);
            jButton_ArgFileBrowse.setEnabled(false);
            jTextField_ScriptArgsFileSettings.setText("");
        }
    }//GEN-LAST:event_jCheckBox_ArgFileSettingsActionPerformed

    private void jDialog_SettingsWindowClosed(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_jDialog_SettingsWindowClosed
        loadEnv();
    }//GEN-LAST:event_jDialog_SettingsWindowClosed

    private void jButton_SaveSettingsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_SaveSettingsActionPerformed
        saveSettings(); 
    }//GEN-LAST:event_jButton_SaveSettingsActionPerformed

    private void jButton_ArgFileBrowseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_ArgFileBrowseActionPerformed
        // TODO add your handling code here:
        try{
            Properties prop = new Properties();
            jFileChooser1.setCurrentDirectory(new java.io.File(prop.getProperty("user.home", ".")));  
            jFileChooser1.setDialogTitle("Select Script Argument File (--script-args-file) ");
            jFileChooser1.setMultiSelectionEnabled(false);
            int option = jFileChooser1.showOpenDialog(jDialog_Settings);
            if(option == jFileChooser1.APPROVE_OPTION){
                File file = new File(jFileChooser1.getSelectedFile().getAbsolutePath()); 
                jTextField_ScriptArgsFileSettings.setText(file.getAbsolutePath());
            }
        }catch(Exception e){
            JOptionPane.showConfirmDialog(jDialog_Settings,"Script argument file could not load. Please try again.", "Settings Error", JOptionPane.DEFAULT_OPTION, JOptionPane.ERROR_MESSAGE); 
            
        }
    }//GEN-LAST:event_jButton_ArgFileBrowseActionPerformed

    private void jButton_sBrowse1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_sBrowse1ActionPerformed
        // TODO add your handling code here:
        try{
            Properties prop = new Properties();
            jFileChooser1.setCurrentDirectory(new java.io.File(prop.getProperty("user.home", ".")));
            jFileChooser1.setDialogTitle("Save New Script As");
            jFileChooser1.setMultiSelectionEnabled(false); 
            jFileChooser1.setFileFilter(new FileNameExtensionFilter("Nmap Script Files (*.nse)", "nse"));
            jFileChooser1.setFileSelectionMode(jFileChooser1.FILES_ONLY);
            int option = jFileChooser1.showSaveDialog(jDialog_New);
            if(option == jFileChooser1.APPROVE_OPTION){
                File file = new File(jFileChooser1.getSelectedFile().getAbsolutePath());
                if(!file.exists()) file.createNewFile();
                hb.setFile(file);
                jTextField_sName.setText(file.getAbsolutePath());
            }
            
         }catch(Exception e){
            Object[] options = {"OK"};
            JOptionPane.showOptionDialog(jDialog_New, "User does not have permission to write to this directory.", "Access Denied", JOptionPane.ERROR_MESSAGE, JOptionPane.ERROR_MESSAGE, null, options, options[0]);
             
        }
    }//GEN-LAST:event_jButton_sBrowse1ActionPerformed

    private void jButton_sCancel1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_sCancel1ActionPerformed
        // TODO add your handling code here:
        resetNewProjUI();
        jDialog_New.dispose();
    }//GEN-LAST:event_jButton_sCancel1ActionPerformed

    private void jButton_sResetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_sResetActionPerformed
        // TODO add your handling code here:
        resetNewProjUI();
    }//GEN-LAST:event_jButton_sResetActionPerformed

    private void jButton_sCreate1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_sCreate1ActionPerformed
        // TODO add your handling code here:
        ScriptBuilder sb = new ScriptBuilder();
        sb.setTemplate(jTextField_sName.getText(), jTextArea_sDescription.getText(), jTextField_sAuthor.getText(), jComboBox_sService.getSelectedItem().toString(), jList_sCategory.getSelectedValues());

        createNew(sb.createTemplate());
        jDialog_New.dispose();
    }//GEN-LAST:event_jButton_sCreate1ActionPerformed

    private void jButton_FindNextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_FindNextActionPerformed
        // TODO add your handling code here:
        findText(true);
    }//GEN-LAST:event_jButton_FindNextActionPerformed

    private void jButton_closeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_closeActionPerformed
        // TODO add your handling code here:
        jDialog_SearchBox.setVisible(false);
        jDialog_SearchBox.dispose();
    }//GEN-LAST:event_jButton_closeActionPerformed

    private void jMenuItem_HelpNSEDocActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem_HelpNSEDocActionPerformed
        // TODO add your handling code here:
        Desktop desktop = java.awt.Desktop.getDesktop();
        try {
            URI url = new URI("https://nmap.org/nsedoc/");
            desktop.browse(url);
        } catch (Exception e) { 
        }
    }//GEN-LAST:event_jMenuItem_HelpNSEDocActionPerformed

    private void jMenuItem_HelpReportBugsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem_HelpReportBugsActionPerformed
        // TODO add your handling code here:
        Desktop desktop = java.awt.Desktop.getDesktop();
        try {
            URI url = new URI("https://github.com/s4n7h0/Halcyon/issues/new");
            desktop.browse(url);
        } catch (Exception e) { 
        }
    }//GEN-LAST:event_jMenuItem_HelpReportBugsActionPerformed

    private void jMenuItem_HelpGettingStartingActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem_HelpGettingStartingActionPerformed
        // TODO add your handling code here:
        Desktop desktop = java.awt.Desktop.getDesktop();
        try {
            URI url = new URI("https://halcyon-ide.org/overview");
            desktop.browse(url);
        } catch (Exception e) { 
        }
    }//GEN-LAST:event_jMenuItem_HelpGettingStartingActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel("javax.swing.plaf.metal.MetalLookAndFeel");
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainPanel.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainPanel.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainPanel.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainPanel.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
               // new MainPanel(ConfigurationManager cm).setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup buttonGroup_scanType;
    private javax.swing.JButton jButton_ArgFileBrowse;
    private javax.swing.JButton jButton_BrowseLibPath;
    private javax.swing.JButton jButton_BrowseNSEPath;
    private javax.swing.JButton jButton_BrowseNmapPath;
    private javax.swing.JButton jButton_CancelSettings;
    private javax.swing.JButton jButton_FindNext;
    private javax.swing.JButton jButton_SaveSettings;
    private javax.swing.JButton jButton_about;
    private javax.swing.JButton jButton_autoconfiguration;
    private javax.swing.JButton jButton_close;
    private javax.swing.JButton jButton_copy;
    private javax.swing.JButton jButton_cut;
    private javax.swing.JButton jButton_find;
    private javax.swing.JButton jButton_new;
    private javax.swing.JButton jButton_open;
    private javax.swing.JButton jButton_paste;
    private javax.swing.JButton jButton_print;
    private javax.swing.JButton jButton_sBrowse1;
    private javax.swing.JButton jButton_sCancel1;
    private javax.swing.JButton jButton_sCreate1;
    private javax.swing.JButton jButton_sReset;
    private javax.swing.JButton jButton_save;
    private javax.swing.JButton jButton_scan;
    private javax.swing.JButton jButton_settings;
    private javax.swing.JButton jButton_stop;
    private javax.swing.JButton jButton_undo;
    private javax.swing.JCheckBox jCheckBox_ArgFileSettings;
    private javax.swing.JCheckBox jCheckBox_ArgSettings;
    private javax.swing.JCheckBox jCheckBox_matchcase;
    private javax.swing.JCheckBox jCheckBox_regex;
    private javax.swing.JCheckBox jCheckBox_settingsDebug;
    private javax.swing.JCheckBox jCheckBox_settingsPacketTrace;
    private javax.swing.JCheckBox jCheckBox_settingsVerbose;
    private javax.swing.JComboBox<String> jComboBox_sService;
    private javax.swing.JDialog jDialog_About;
    private javax.swing.JDialog jDialog_New;
    private javax.swing.JDialog jDialog_SearchBox;
    private javax.swing.JDialog jDialog_Settings;
    private javax.swing.JFileChooser jFileChooser1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel32;
    private javax.swing.JLabel jLabel33;
    private javax.swing.JLabel jLabel34;
    private javax.swing.JLabel jLabel35;
    private javax.swing.JLabel jLabel36;
    private javax.swing.JLabel jLabel37;
    private javax.swing.JLabel jLabel38;
    private javax.swing.JLabel jLabel39;
    private javax.swing.JLabel jLabel40;
    private javax.swing.JLabel jLabel41;
    private javax.swing.JLabel jLabel42;
    private javax.swing.JLabel jLabel43;
    private javax.swing.JLabel jLabel_About;
    private javax.swing.JLabel jLabel_SettingsStatus;
    private javax.swing.JLabel jLabel_Status;
    private javax.swing.JList<String> jList_sCategory;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenu jMenu3;
    private javax.swing.JMenu jMenu4;
    private javax.swing.JMenu jMenu5;
    private javax.swing.JMenu jMenu6;
    private javax.swing.JMenu jMenu7;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem_Close;
    private javax.swing.JMenuItem jMenuItem_CredToCSV;
    private javax.swing.JMenuItem jMenuItem_CredToDB;
    private javax.swing.JMenuItem jMenuItem_EAP;
    private javax.swing.JMenuItem jMenuItem_Exit;
    private javax.swing.JMenuItem jMenuItem_HTTPspider;
    private javax.swing.JMenuItem jMenuItem_HelpAbout;
    private javax.swing.JMenuItem jMenuItem_HelpGettingStarting;
    private javax.swing.JMenuItem jMenuItem_HelpNSEDoc;
    private javax.swing.JMenuItem jMenuItem_HelpReportBugs;
    private javax.swing.JMenuItem jMenuItem_JDWP;
    private javax.swing.JMenuItem jMenuItem_New;
    private javax.swing.JMenuItem jMenuItem_Open;
    private javax.swing.JMenuItem jMenuItem_Save;
    private javax.swing.JMenuItem jMenuItem_SaveAs;
    private javax.swing.JMenuItem jMenuItem_Settings;
    private javax.swing.JMenuItem jMenuItem_afpHelper;
    private javax.swing.JMenuItem jMenuItem_bittorrent;
    private javax.swing.JMenuItem jMenuItem_bruteDriver;
    private javax.swing.JMenuItem jMenuItem_bruteEngine;
    private javax.swing.JMenuItem jMenuItem_closeAll;
    private javax.swing.JMenuItem jMenuItem_closeWorkSpace;
    private javax.swing.JMenuItem jMenuItem_copy;
    private javax.swing.JMenuItem jMenuItem_cut;
    private javax.swing.JMenuItem jMenuItem_dhcp6;
    private javax.swing.JMenuItem jMenuItem_dnsBList;
    private javax.swing.JMenuItem jMenuItem_dnsQ;
    private javax.swing.JMenuItem jMenuItem_dnssd;
    private javax.swing.JMenuItem jMenuItem_drda;
    private javax.swing.JMenuItem jMenuItem_exportScript;
    private javax.swing.JMenuItem jMenuItem_find;
    private javax.swing.JMenuItem jMenuItem_goip;
    private javax.swing.JMenuItem jMenuItem_imap;
    private javax.swing.JMenuItem jMenuItem_informix;
    private javax.swing.JMenuItem jMenuItem_mssqlQ;
    private javax.swing.JMenuItem jMenuItem_ncp;
    private javax.swing.JMenuItem jMenuItem_nrpc;
    private javax.swing.JMenuItem jMenuItem_openssl;
    private javax.swing.JMenuItem jMenuItem_paste;
    private javax.swing.JMenuItem jMenuItem_print;
    private javax.swing.JMenuItem jMenuItem_rpc;
    private javax.swing.JMenuItem jMenuItem_run;
    private javax.swing.JMenuItem jMenuItem_socketConnSend;
    private javax.swing.JMenuItem jMenuItem_stop;
    private javax.swing.JMenuItem jMenuItem_tftp;
    private javax.swing.JMenuItem jMenuItem_undo;
    private javax.swing.JMenuItem jMenuItem_updateScriptDB;
    private javax.swing.JMenuItem jMenuItem_xamp;
    private javax.swing.JMenu jMenu_Edit;
    private javax.swing.JMenu jMenu_File;
    private javax.swing.JMenu jMenu_Help;
    private javax.swing.JMenu jMenu_Proj;
    private javax.swing.JMenu jMenu_codegen;
    private javax.swing.JPanel jPanel12;
    private javax.swing.JPanel jPanel13;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JPanel jPanel_status;
    private javax.swing.JPopupMenu jPopupMenu1;
    private javax.swing.JProgressBar jProgressBar_status;
    private javax.swing.JRadioButton jRadioButton_settignsScanUDP;
    private javax.swing.JRadioButton jRadioButton_settingsScanTCP;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane10;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane9;
    private javax.swing.JPopupMenu.Separator jSeparator1;
    private javax.swing.JToolBar.Separator jSeparator11;
    private javax.swing.JSeparator jSeparator14;
    private javax.swing.JSeparator jSeparator15;
    private javax.swing.JSeparator jSeparator16;
    private javax.swing.JToolBar.Separator jSeparator2;
    private javax.swing.JToolBar.Separator jSeparator3;
    private javax.swing.JToolBar.Separator jSeparator4;
    private javax.swing.JToolBar.Separator jSeparator5;
    private javax.swing.JPopupMenu.Separator jSeparator6;
    private javax.swing.JPopupMenu.Separator jSeparator7;
    private javax.swing.JPopupMenu.Separator jSeparator8;
    private javax.swing.JPopupMenu.Separator jSeparator9;
    private javax.swing.JSplitPane jSplitPane_workpane;
    private javax.swing.JSplitPane jSplitPane_workspace;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTabbedPane jTabbedPane_Settings;
    private javax.swing.JTabbedPane jTabbedPane_workspace;
    private javax.swing.JTextArea jTextArea_output;
    private javax.swing.JTextArea jTextArea_sDescription;
    private javax.swing.JTextField jTextField_ScriptArgsFileSettings;
    private javax.swing.JTextField jTextField_ScriptArgsSettings;
    private javax.swing.JTextField jTextField_envEpath;
    private javax.swing.JTextField jTextField_envLpath;
    private javax.swing.JTextField jTextField_envSpath;
    private javax.swing.JTextField jTextField_host;
    private javax.swing.JTextField jTextField_port;
    private javax.swing.JTextField jTextField_sAuthor;
    private javax.swing.JTextField jTextField_sName;
    private javax.swing.JTextField jTextField_searchItem;
    private javax.swing.JToolBar jToolBar1;
    private javax.swing.JToolBar jToolBar2;
    private javax.swing.JTree jTree_NSE;
    private javax.swing.JTree jTree_NSEDATA;
    private javax.swing.JTree jTree_NSELIB;
    // End of variables declaration//GEN-END:variables

    
    // user defined variables
    HalcyonBean hb = new HalcyonBean();
    public RSyntaxTextArea codearea;
    private UndoManager undoManager;
    CommandExecutionHandler cmdHandler;
    private Task task;
    private UpdateDB updateDB;
    String userhome = null;
    
    URL url = getClass().getResource("/halcyon/icons/logo.png"); 
    ImageIcon icon = new ImageIcon(url);
    
    // user defined functions
    private void setIcon() {
        setIconImage(Toolkit.getDefaultToolkit().getImage(getClass().getResource("/halcyon/icons/logo.png")));
        
    }

    private void Configure() {
        Properties properties = System.getProperties(); 
        userhome = properties.getProperty("user.home");
        
        File conf = new File(cm.configfile);
        if (conf.exists()) { 
            //Setup the main panel
            Properties prop = new Properties();
            InputStream in = null;
            try {
                in = new FileInputStream(cm.configfile);
                prop.load(in);
                jTree_NSE.setModel(new FileSystemModel(new File(prop.getProperty("script_path"))));
                jTree_NSEDATA.setModel(new FileSystemModel(new File((prop.getProperty("lib_path")+"data"))));
                jTree_NSELIB.setModel(new FileSystemModel(new File(prop.getProperty("lib_path"))));
            } catch (Exception e) {
                e.printStackTrace();
            }
        }else{
            String msg = "<html>Classpath is not configured. Halcyon IDE will not work as desired without this configuration. <br>Click Yes to configure now or No to quit.</html>";
            String title = "Configuration Missing";
            
             int configCheck = JOptionPane.showConfirmDialog(null, msg, title, JOptionPane.YES_NO_OPTION);
             if(configCheck == JOptionPane.YES_OPTION){
                 configNow();
             }else if(configCheck == JOptionPane.NO_OPTION){
                 System.exit(0);
             }else{
                 System.exit(0);
             }
        }
    }
    
    /*private int showMsg(Component comp,String msg, String title, int jOption){
            
             int done = JOptionPane.showConfirmDialog(comp, msg, title, jOption, JOptionPane.WARNING_MESSAGE);
             
             return done;
    }*/
    
    private void configNow(){
        jDialog_Settings.setIconImage(icon.getImage());
        //jFrame_Configure.pack();
        jDialog_Settings.setLocationRelativeTo(null);
        jDialog_Settings.setVisible(true);
    } 
    
    private void loadEnv(){  
        try { 
            ConfigurationManager configmgr = new ConfigurationManager();
            configmgr.init();       
            if(configmgr.scan_type.equals("tcp")){
                jRadioButton_settingsScanTCP.setSelected(true);
                jRadioButton_settignsScanUDP.setSelected(false);
            }else{  
                jRadioButton_settingsScanTCP.setSelected(false);
                jRadioButton_settignsScanUDP.setSelected(true);
            }
            if(configmgr.debug.equals("True")){
                jCheckBox_settingsDebug.setSelected(true);
            }else{
                jCheckBox_settingsDebug.setSelected(false);
            }
            if(configmgr.pkt_trace.equals("True")){
                jCheckBox_settingsPacketTrace.setSelected(true);
            }else{
                jCheckBox_settingsPacketTrace.setSelected(false);
            }
            if(configmgr.verbose.equals("True")){
                jCheckBox_settingsVerbose.setSelected(true);
            }else{
                jCheckBox_settingsVerbose.setSelected(false);
            }
            if(configmgr.script_arg.isEmpty() || configmgr.script_arg == "" || configmgr.script_arg == null ){
                jCheckBox_ArgSettings.setSelected(false);
                jTextField_ScriptArgsSettings.setEditable(false); 
            }else{
                jCheckBox_ArgSettings.setSelected(true);
                jTextField_ScriptArgsSettings.setEditable(true);
                jTextField_ScriptArgsSettings.setText(configmgr.script_arg); 
            }
            if(configmgr.script_argfile.isEmpty() || configmgr.script_argfile == "" || configmgr.script_argfile == null ){
                jCheckBox_ArgFileSettings.setSelected(false);
                jTextField_ScriptArgsFileSettings.setText("");
            }else{
                jCheckBox_ArgFileSettings.setSelected(true);
                jTextField_ScriptArgsFileSettings.setText(configmgr.script_argfile);
            }
            jTextField_envEpath.setText(configmgr.nmap_path);
            jTextField_envSpath.setText(configmgr.script_path);
            jTextField_envLpath.setText(configmgr.lib_path);  
            jLabel_SettingsStatus.setText("");
        } catch (Exception e) {
            JOptionPane.showConfirmDialog(null,"Error in configuration. Please configure correctly and restart Halcyon.", "Configuration Error", JOptionPane.OK_OPTION, JOptionPane.PLAIN_MESSAGE);
        }
    }

    private void createNew(StringBuilder sb) {
        try{ 
            codearea = new RSyntaxTextArea();

            undoManager = new UndoManager();
            codearea.getDocument().addUndoableEditListener(undoManager);
            
            codearea.setSyntaxEditingStyle(SyntaxConstants.SYNTAX_STYLE_LUA);
            codearea.setCodeFoldingEnabled(true);
            codearea.setAntiAliasingEnabled(true);
            CompletionProvider provider = createCompletionProvider();
            AutoCompletion ac = new AutoCompletion(provider);
            ac.install(codearea);
            codearea.setText(sb.toString());
            RTextScrollPane codePane = new RTextScrollPane(codearea);
            File f = hb.getFile();
            jTabbedPane_workspace.add(f.getAbsolutePath(),codePane);
            codearea.getDocument().addDocumentListener(new MyDocumentListener(jTabbedPane_workspace,jLabel_Status));
            jTabbedPane_workspace.setSelectedIndex(jTabbedPane_workspace.getTabCount()-1);
        }catch(Exception e){ 
            Object[] options = {"OK"};
            JOptionPane.showOptionDialog(jDialog_New, "Unable to create new NSE script due to file I/O error.", "Error", JOptionPane.ERROR_MESSAGE, JOptionPane.ERROR_MESSAGE, null, options, options[0]);
        }
            
    }
    
    

    private CompletionProvider createCompletionProvider() {

      DefaultCompletionProvider provider = new DefaultCompletionProvider();

      // common keywords
      String[] keyword1 = {"and", "break", "do", "else", "elseif", "end", "false", "for", "function", "goto", "if", "in", "local", "nil", "not", "or", "repeat", "return", "then", "true", "until", "while", "_ENV", "_G", "_VERSION", "assert", "collectgarbage", "dofile", "error", "getfenv", "getmetatable", "ipairs", "load", "loadfile", "loadstring", "module", "next", "pairs", "pcall", "print", "rawequal", "rawget", "rawlen", "rawset", "require", "select", "setfenv", "setmetatable", "tonumber", "tostring", "type", "unpack", "xpcall", "string", "table", "math", "bit32", "coroutine", "io", "os", "debug", "package", "__index", "__newindex", "__call", "__add", "__sub", "__mul", "__div", "__mod", "__pow", "__unm", "__concat", "__len", "__eq", "__lt", "__le", "__gc", "__mode", "byte", "char", "dump", "find", "format", "gmatch", "gsub", "len", "lower", "match", "rep", "reverse", "sub", "upper", "abs", "acos", "asin", "atan", "atan2", "ceil", "cos", "cosh", "deg", "exp", "floor", "fmod", "frexp", "ldexp", "log", "log10", "max", "min", "modf", "pow", "rad", "random", "randomseed", "sin", "sinh", "sqrt", "tan", "tanh", "arshift", "band", "bnot", "bor", "btest", "bxor", "extract", "lrotate", "lshift", "replace", "rrotate", "rshift", "shift", "string.byte", "string.char", "string.dump", "string.find", "string.format", "string.gmatch", "string.gsub", "string.len", "string.lower", "string.match", "string.rep", "string.reverse", "string.sub", "string.upper", "table.concat", "table.insert", "table.maxn", "table.pack", "table.remove", "table.sort", "table.unpack", "math.abs", "math.acos", "math.asin", "math.atan", "math.atan2", "math.ceil", "math.cos", "math.cosh", "math.deg", "math.exp", "math.floor", "math.fmod", "math.frexp", "math.huge", "math.ldexp", "math.log", "math.log10", "math.max", "math.min", "math.modf", "math.pi", "math.pow", "math.rad", "math.random", "math.randomseed", "math.sin", "math.sinh", "math.sqrt", "math.tan", "math.tanh", "bit32.arshift", "bit32.band", "bit32.bnot", "bit32.bor", "bit32.btest", "bit32.bxor", "bit32.extract", "bit32.lrotate", "bit32.lshift", "bit32.replace", "bit32.rrotate", "bit32.rshift", "close", "flush", "lines", "read", "seek", "setvbuf", "write", "clock", "date", "difftime", "execute", "exit", "getenv", "remove", "rename", "setlocale", "time", "tmpname", "coroutine.create", "coroutine.resume", "coroutine.running", "coroutine.status", "coroutine.wrap", "coroutine.yield", "io.close", "io.flush", "io.input", "io.lines", "io.open", "io.output", "io.popen", "io.read", "io.tmpfile", "io.type", "io.write", "io.stderr", "io.stdin", "io.stdout", "os.clock", "os.date", "os.difftime", "os.execute", "os.exit", "os.getenv", "os.remove", "os.rename", "os.setlocale", "os.time", "os.tmpname", "debug.debug", "debug.getfenv", "debug.gethook", "debug.getinfo", "debug.getlocal", "debug.getmetatable", "debug.getregistry", "debug.getupvalue", "debug.getuservalue", "debug.setfenv", "debug.sethook", "debug.setlocal", "debug.setmetatable", "debug.setupvalue", "debug.setuservalue", "debug.traceback", "debug.upvalueid", "debug.upvaluejoin", "package.cpath", "package.loaded", "package.loaders", "package.loadlib", "package.path", "package.preload", "package.seeall"};
      String[] keyword2 = {"description","@usage","@output","PORT","STATE","SERVICE","REASON", "require","portrule","shortport","stdnse","registry"};
      String[] keywords = new String[keyword1.length+keyword2.length];
      System.arraycopy(keyword1, 0, keywords, 0, keyword1.length);
      System.arraycopy(keyword2, 0, keywords, keyword1.length, keyword2.length);
      
      Hashtable ht = new Hashtable();
      ht.put("echo", "echo( )"); 
      ht.put("descr", "description = [[ ]]");
      ht.put("categ", "categories =  { }");
      ht.put("require", "require \" \" ");
      ht.put("acl_group", "acl_group_to_long_string ( )");
      ht.put("acls_to", "acls_to_long_string ()");
      ht.put("porthttprule", "portrule = shortport.http");
      ht.put("port", "portrule = shortport.port_or_service (port, \"service\", {\"tcp\"})");
      ht.put("stdout", "stdnse.format_output(true, response)");
      ht.put("portaction", "portaction = function(host, port)\\nend");
      ht.put("hostaction", "hostaction = function(host)\\nend");
      ht.put("preaction", "preaction = function()\\nend");
      ht.put("postaction", "postaction = function()\\nend");
      ht.put("action", "action = function( host, port )");
      
      
      
      // Add auto completions for all possible LUA keywords. 
      for(String keyword:keywords){
          provider.addCompletion(new BasicCompletion(provider, keyword));
      }
       
      
      // Adding some "shorthand" completions. You can use ctrl+space to get this
      Enumeration e = ht.keys();  
      while (e.hasMoreElements()) {
            String key = (String) e.nextElement();
            String val = (String) ht.get(key);
            provider.addCompletion(new ShorthandCompletion(provider, key, val, val));
            
      }
       
      return provider;

   }
    
   public void openScript(){
       File scriptFile = null;
        String line = null;
        
        codearea = new RSyntaxTextArea();
        
        codearea.setSyntaxEditingStyle(SyntaxConstants.SYNTAX_STYLE_LUA);
        codearea.setCodeFoldingEnabled(true);
        codearea.setAntiAliasingEnabled(true);
        CompletionProvider provider = createCompletionProvider();
        AutoCompletion ac = new AutoCompletion(provider);
        ac.install(codearea);
        
        
        try{
            Properties prop = System.getProperties();  
            jFileChooser1.setCurrentDirectory(new java.io.File(prop.getProperty("user.home")));
            jFileChooser1.setDialogTitle("Open Script");
            jFileChooser1.setMultiSelectionEnabled(false);
            
            int option = jFileChooser1.showOpenDialog(this);
            if(option == jFileChooser1.APPROVE_OPTION){
                scriptFile = new File(jFileChooser1.getSelectedFile().getAbsolutePath());
                
                BufferedReader br = new BufferedReader(new FileReader(scriptFile));
                while((line = br.readLine())!= null){
                    codearea.setText(codearea.getText()+"\n"+line);
                }
            }
            RTextScrollPane codePane = new RTextScrollPane(codearea);
            jTabbedPane_workspace.add(scriptFile.getAbsolutePath(),codePane);
            codearea.getDocument().addDocumentListener(new MyDocumentListener(jTabbedPane_workspace,jLabel_Status));
            jTabbedPane_workspace.setSelectedIndex(jTabbedPane_workspace.getTabCount()-1);
            
        }catch(Exception e){ 
            
        }
        
       
       
        
   }
   
   public void saveScript(){
        try{
            JScrollPane scroll = (JScrollPane)jTabbedPane_workspace.getSelectedComponent();
            JTextArea area = (JTextArea)scroll.getViewport().getView();

            String scriptCode = area.getText();
            String scriptName = jTabbedPane_workspace.getTitleAt(jTabbedPane_workspace.getSelectedIndex());
            
            File scriptFile = new File(scriptName);
            try{
                    FileWriter fw = new FileWriter(scriptFile.getAbsoluteFile());
                    BufferedWriter bw = new BufferedWriter(fw);
                    bw.write(scriptCode);
                    bw.close();

                codearea.getDocument().addDocumentListener(new MyDocumentListener(jTabbedPane_workspace,jLabel_Status));
                jTabbedPane_workspace.setTitleAt(jTabbedPane_workspace.getSelectedIndex(), scriptName);

                jLabel_Status.setFont(new java.awt.Font("Lucida Grande", 0, 13)); // NOI18N
                jLabel_Status.setForeground(new java.awt.Color(0, 0, 0));
                jLabel_Status.setText(jLabel_Status.getText().replace("Unsaved: ", ""));
                
            }catch(Exception e){
                JOptionPane.showConfirmDialog(null,"Limited File Permission on the selected directory.","Permission Denied",JOptionPane.OK_OPTION);

            }
        }catch(Exception e){
            JOptionPane.showConfirmDialog(null,"No acive script found.\nPlease create a new script and try again","Error",JOptionPane.OK_OPTION);

        }
    }
 
   
    
    //save script
    private void saveAS(){
        
        try{
            JScrollPane scroll = (JScrollPane)jTabbedPane_workspace.getSelectedComponent();
            JTextArea area = (JTextArea)scroll.getViewport().getView();

            String scriptCode = area.getText();
            String scriptName = jTabbedPane_workspace.getTitleAt(jTabbedPane_workspace.getSelectedIndex());
            File scriptFile = null;

            try{
                Properties prop = System.getProperties();  
                jFileChooser1.setCurrentDirectory(new java.io.File(prop.getProperty("user.home"))); 
                jFileChooser1.setDialogTitle("Save Script");

                jFileChooser1.setMultiSelectionEnabled(false);
                int option = jFileChooser1.showSaveDialog(this);
                if(option == jFileChooser1.APPROVE_OPTION){
                    scriptFile = new File(jFileChooser1.getSelectedFile().getAbsolutePath());
                    if(!scriptFile.exists()){
                        scriptFile.createNewFile();
                    }
                    FileWriter fw = new FileWriter(scriptFile.getAbsoluteFile());
                    BufferedWriter bw = new BufferedWriter(fw);
                    bw.write(scriptCode);
                    bw.close();
                }
                codearea.getDocument().addDocumentListener(new MyDocumentListener(jTabbedPane_workspace,jLabel_Status));
                jTabbedPane_workspace.setTitleAt(jTabbedPane_workspace.getSelectedIndex(), scriptFile.getAbsolutePath());
                jTabbedPane_workspace.setToolTipTextAt(jTabbedPane_workspace.getSelectedIndex(), scriptFile.getAbsolutePath());
                
                jLabel_Status.setFont(new java.awt.Font("Lucida Grande", 0, 13)); // NOI18N
                jLabel_Status.setForeground(new java.awt.Color(0, 0, 0));
                jLabel_Status.setText(jLabel_Status.getText().replace("Unsaved: ", ""));
                
            }catch(Exception e){
                JOptionPane.showConfirmDialog(null,"Limited File Permission on the selected directory.","Permission Denied",JOptionPane.DEFAULT_OPTION);

            }
        }catch(Exception e){
            JOptionPane.showConfirmDialog(null,"No acive script found.\nPlease create a new script and try again","Error",JOptionPane.DEFAULT_OPTION);

        }
    }
    
    public void printScript(){
        try {
            JScrollPane scroll = (JScrollPane)jTabbedPane_workspace.getSelectedComponent();
            JTextArea area = (JTextArea)scroll.getViewport().getView();
            boolean done = area.print();
            if(done){
                JOptionPane.showConfirmDialog(null,"Printing Finished", "Information",JOptionPane.INFORMATION_MESSAGE);
            }else{
                JOptionPane.showConfirmDialog(null, "Printing in Progress.", "Print",JOptionPane.PLAIN_MESSAGE);
            } 
        } catch (Exception e) {
            JOptionPane.showConfirmDialog(null, "Printing Failed. Try again.", "Print Script",JOptionPane.PLAIN_MESSAGE);
        }
    }
    
    public void findText(boolean next){
        boolean found;
        try {
            if(jTabbedPane_workspace.getSelectedComponent()!=null){
                JScrollPane scroll = (JScrollPane)jTabbedPane_workspace.getSelectedComponent();
                JTextArea area = (JTextArea)scroll.getViewport().getView();
                SearchContext search = new SearchContext();
                String text = jTextField_searchItem.getText();
                if(text.length()==0){
                    return;
                }
                search.setSearchFor(text);
                search.setMatchCase(jCheckBox_matchcase.isSelected());
                search.setRegularExpression(jCheckBox_regex.isSelected());
                search.setSearchForward(next);
                search.setWholeWord(false);
                 
                found = SearchEngine.find(area, search).wasFound(); 
                
                if (!found) {
                        JOptionPane.showMessageDialog(this, "Text not found");
                }
            }else{
                JOptionPane.showConfirmDialog(jDialog_SearchBox,"Error", "No File Opened. Open a file or create new before search for something.", JOptionPane.DEFAULT_OPTION, JOptionPane.ERROR_MESSAGE);
            } 
        } catch (Exception e) {
        }
    }

    private void showOptions() { 
        jDialog_Settings.pack();
        jDialog_Settings.setLocationRelativeTo(null);
        jDialog_Settings.setVisible(true);
    }

    
    
    private void saveSettings(){
         
        if(jCheckBox_ArgSettings.isSelected() && jTextField_ScriptArgsSettings.getText().isEmpty()){
            JOptionPane.showConfirmDialog(jDialog_Settings, "Script Argument is empty", "Error", JOptionPane.DEFAULT_OPTION, JOptionPane.ERROR_MESSAGE);
        }else if(jCheckBox_ArgFileSettings.isSelected() && jTextField_ScriptArgsFileSettings.getText().isEmpty()){
            JOptionPane.showConfirmDialog(jDialog_Settings, "Script Argument is empty", "Error", JOptionPane.DEFAULT_OPTION, JOptionPane.ERROR_MESSAGE);
        }else if(jTextField_envEpath.getText().isEmpty() && jTextField_envLpath.getText().isEmpty() && jTextField_envSpath.getText().isEmpty()){
            JOptionPane.showConfirmDialog(jDialog_Settings, "Environment Settings are empty", "Error", JOptionPane.DEFAULT_OPTION, JOptionPane.ERROR_MESSAGE);
        }else{
            String type, arg, argfile, pt, v, d = ""; 
            String nmap, nscript, nlib = "";
            if(jRadioButton_settingsScanTCP.isSelected()){
                type = "tcp";
                hb.setScanType("TCP Scan");
            }else{
                type = "udp";
                hb.setScanType("UDP Scan");
            }
            if(jCheckBox_ArgSettings.isSelected()){
                arg = jTextField_ScriptArgsSettings.getText(); 
                hb.setScriptArgs(jTextField_ScriptArgsSettings.getText(), jCheckBox_ArgSettings.isSelected());
            }else{
                arg = "";
            }
            if(jCheckBox_ArgFileSettings.isSelected()){
                argfile = jTextField_ScriptArgsFileSettings.getText();
                hb.setScriptArgsFile(jTextField_ScriptArgsFileSettings.getText(), jCheckBox_ArgFileSettings.isSelected());
            }else{
                argfile = "";
            }
            hb.setPtrace(jCheckBox_settingsPacketTrace.isSelected());
            pt = jCheckBox_settingsPacketTrace.isSelected() ? "True" : "False"; 
            hb.setDebug(jCheckBox_settingsDebug.isSelected());
            d = jCheckBox_settingsDebug.isSelected() ? "True" : "False"; 
            hb.setVerbose(jCheckBox_settingsVerbose.isSelected());
            v = jCheckBox_settingsVerbose.isSelected() ? "True" : "False";
            nmap = jTextField_envEpath.getText();
            hb.setNmap(nmap);
            nscript = jTextField_envSpath.getText();
            hb.setNscript(nscript);
            nlib = jTextField_envLpath.getText();
            hb.setNlib(nlib);
            ConfigurationManager cmgr = new ConfigurationManager();
            cmgr.SaveConfiguration(type, arg, argfile, pt, d, v, nmap, nscript, nlib);
            jLabel_SettingsStatus.setText("Changes are saved.");
            
        } 
         
    }

    private void pushCode(String code) {
        try{
            JScrollPane scroll = (JScrollPane)jTabbedPane_workspace.getSelectedComponent();
            JTextArea area = (JTextArea)scroll.getViewport().getView();
            int pos = area.getCaretPosition();
            area.insert(code, pos);
        }catch(Exception e){
            JOptionPane.showConfirmDialog(null,"Can not generate code. Try Again", "Code Generation Failed.", JOptionPane.PLAIN_MESSAGE);
        }
    }

    private void openTreeNode(File f) {
        File scriptFile = null;
        String line = null;
        
        codearea = new RSyntaxTextArea(); 
        
        codearea.setSyntaxEditingStyle(SyntaxConstants.SYNTAX_STYLE_LUA);
        codearea.setCodeFoldingEnabled(true);
        codearea.setAntiAliasingEnabled(true);
        CompletionProvider provider = createCompletionProvider();
        AutoCompletion ac = new AutoCompletion(provider);
        ac.install(codearea);
        
        try{
            BufferedReader br = new BufferedReader(new FileReader(f));
            while((line = br.readLine())!= null){
                codearea.setText(codearea.getText()+"\n"+line);
            }
            RTextScrollPane codePane = new RTextScrollPane(codearea);
            jTabbedPane_workspace.add(f.getAbsolutePath(),codePane);
            //jTabbedPane_workspace.setTitleAt(jTabbedPane_workspace.getTitleAt(jTabbedPane_workspace.gets)+"*");
            codearea.getDocument().addDocumentListener(new MyDocumentListener(jTabbedPane_workspace,jLabel_Status)); 
            jTabbedPane_workspace.setSelectedIndex(jTabbedPane_workspace.getTabCount()-1);
        }catch(Exception e){
             
        }
        
    }

    private void killScan() {
        jProgressBar_status.setIndeterminate(false);
        cmdHandler.killProcess();
        jTextArea_output.setText(jTextArea_output.getText()+"========= Scannig Terminated by User =========\r\n");
    }

    private void startScan() {
        if(jTabbedPane_workspace.getSelectedComponent()!=null){
            jProgressBar_status.setIndeterminate(true);
            task = new Task(); 
            task.execute(); 
        }else{
            JOptionPane.showConfirmDialog(null,"No script found in the current workspace", "Error", JOptionPane.PLAIN_MESSAGE);
        }
    }

    private void resetNewProjUI() {
        jTextField_sAuthor.setText(System.getProperty("user.name"));
        jList_sCategory.setSelectedIndex(3);
        jTextField_sName.setText("");
        jTextArea_sDescription.setText("");
        jComboBox_sService.setSelectedIndex(0);
    }

    private void exportScript() {
        try {
            
            String scriptName = jTabbedPane_workspace.getTitleAt(jTabbedPane_workspace.getSelectedIndex());
            File f = new File(scriptName);
            String fname = f.getName();
            Properties prop = new Properties(); 
            InputStream in = new FileInputStream(cm.configfile);
            prop.load(in);
            String expScriptName = prop.getProperty("script_path")+""+fname;
            jTextArea_output.setText("Exportig "+scriptName+" to Nmap Script path "+expScriptName+"\r\n");
            
            File exportScript = new File(expScriptName);
            exportScript.setExecutable(true);
            exportScript.setReadable(true);
            exportScript.setWritable(true);
            InputStream inStream = new FileInputStream(new File(scriptName));
            OutputStream outStream = new FileOutputStream(exportScript);
            
            byte[] buffer = new byte[1024];
    		
    	    int length;
    	    while ((length = inStream.read(buffer)) > 0){
    	    	outStream.write(buffer, 0, length);
    	    }
    	 
    	    inStream.close();
    	    outStream.close();
            
            updateScriptDB();
            
        } catch (Exception e) {
            JOptionPane.showConfirmDialog(null, "You dont have permission to make changes in the nmap script path. \r\nRun with privileged account or export the script manually.", "Export Failed", JOptionPane.PLAIN_MESSAGE);
        }
    }

    private void updateScriptDB() {
        try {
            updateDB = new UpdateDB(); 
            updateDB.execute();
        } catch (Exception e) {
        }
    }

    private void showAbout() {
        String jrv, jvn, jvv, jrn, on, ov, oa, sje, ulc, udir;
        jrv = jvn = jvv = jrn = on = ov = oa = sje = ulc = udir = null;
        Properties properties = System.getProperties(); 
        jrv = properties.getProperty("java.runtime.version");
        jvn = properties.getProperty("java.vm.name");
        jvv = properties.getProperty("java.vm.version");
        jrn = properties.getProperty("java.runtime.name");
        on = properties.getProperty("os.name");
        ov = properties.getProperty("os.version");
        oa = properties.getProperty("os.arch");
        sje = properties.getProperty("sun.jnu.encoding");
        ulc = properties.getProperty("user.language_user.country"); 
        File conf = new File(cm.configfile);
        if (conf.exists()) {
            udir = conf.getParent();
        }else{
            udir = "";
        }  
        String about = "<html>" +
                    "<body>" +
                    "<p>" +
                    "<h3>Halcyon IDE</h3>" +
                    "Version: 2.0.2 <br>"+
                    "Release Codename: Boreas <br>" +
                    "Build id: 20200803-1200<br>" +
                    "</p>" +
                    "<p align=\"justify\">" +
                    "(c) Copyright GPL 3.0 License. https://halcyon-ide.org <br>" + 
                    "</p> <br><br>" +
                    "<p align=\"justify\">" + 
                    "Java: " + jrv+"; "+jvn+"; "+jvv+" <br>"+
                    "Runtime: " + jrn+"; "+jrv+" <br>" +
                    "System: "+on+" "+ov+" running on "+oa+"; "+sje+"; "+ulc+"<br>" +
                    "User directory: "+ udir +"<br>" + 
                    "</p>" +
                    "</body></html>";
        jLabel_About.setText(about);
        jDialog_About.pack();
        jDialog_About.setLocationRelativeTo(null);
        jDialog_About.setVisible(true);
    } 
 

    class Task extends SwingWorker<Void, Void> {
    /*
     * Main task. Executed in background thread.
     */
    @Override
    public Void doInBackground() {
      String host,port,fpath,fname,nmap; 
        StringBuilder output = null;
        Properties prop = new Properties(); 
        InputStream in;
        java.util.List<String> cmd = new ArrayList<String>(); 
        
        if(jLabel_Status.getText().contains("File not saved: ")){
            saveScript(); 
        }
        try {
                host = getValidTarget(jTextField_host.getText().trim());
                port = getValidPort(jTextField_port.getText().trim());
                File f = new File(hb.getPath());
                fpath = f.getParent();
                fname = f.getName();
                if(!host.isEmpty() || host!=null || port !=null){
                    jTextArea_output.setText("");
                    
                    //get the classpath and binaries
                    in = new FileInputStream(cm.configfile);
                    prop.load(in);
                    nmap = prop.getProperty("nmap_path");
                    
                    // command building 
                    cmd.add(nmap); 
                   
                    cmd.add("--script="+ f.getAbsolutePath()+"");
                    cmd.add("--datadir=\""+f.getParent().toString().trim()+"\"");
                    if(hb.isScriptArg()){
                       
                        cmd.add("--script-args=\""+hb.getScriptArgs().trim()+"\"");
                    }
                    
                    if(hb.isScriptArgsFile()){
                         cmd.add("--script-args-file=\""+hb.getScriptArgsFile().trim()+"\"");
                    }
                     
                    
                    if(hb.getScanType().equals("UDP Scan")){
                        cmd.add("-sU"); 
                    }
                    cmd.add(host);
                    if(!port.equals("default")){
                        cmd.add("-p "+port);
                    }
                    
                    if(hb.getPtrace()){
                        cmd.add("--packet-trace");
                    }
                    if(hb.getVerbose()){
                        cmd.add("-vv");
                    }
                    if(hb.getDebug()){
                        cmd.add("-d");
                    }
                     jTextArea_output.setText("========== Execution Started =========\r\n");
                    cmdHandler = new CommandExecutionHandler(cmd);
                    jTextArea_output.setText(jTextArea_output.getText()+"\r\n"+cmdHandler.executeCommand());
                    jTextArea_output.setText(jTextArea_output.getText()+"========== Execution Finished =========\r\n");
                    
                }else{
                    JOptionPane.showConfirmDialog(null,"Invalid host or port", "Warning", JOptionPane.PLAIN_MESSAGE);
                }
                
            } catch (Exception e) {
                JOptionPane.showConfirmDialog(null,"Script failed to execute. This could be due to halcyon misconfiguration. Try again after configuring it properly.", "Script Failed", JOptionPane.PLAIN_MESSAGE);
                
            }
      return null;
    }

    /*
     * Executed in event dispatching thread
     */
    @Override
    public void done() {
      Toolkit.getDefaultToolkit().beep();
      jProgressBar_status.setIndeterminate(false);
      setCursor(null); // turn off the wait cursor 
    }
  }
  
    class UpdateDB extends SwingWorker<Void, Void> {
    /*
     * Main task. Executed in background thread.
     */
    @Override
    public Void doInBackground() {
      String host,port,fpath,fname,nmap; 
        StringBuilder output = null;
        Properties prop = new Properties(); 
        InputStream in;
        java.util.List<String> cmd = new ArrayList<String>(); 
        jTextArea_output.setText(jTextArea_output.getText()+"\r\n========== Updating Script DB =========\r\n");
 
        try { 
            in = new FileInputStream(cm.configfile);
            prop.load(in);
            nmap = prop.getProperty("nmap_path");
                    
            cmd.add(nmap); 
            cmd.add("--script-updatedb");
            
            cmdHandler = new CommandExecutionHandler(cmd);
            jTextArea_output.setText(jTextArea_output.getText()+"\r\n"+cmdHandler.executeCommand());
            jTextArea_output.setText(jTextArea_output.getText()+"========== Script DB Updated =========\r\n");
                
            } catch (Exception e) {
                JOptionPane.showConfirmDialog(null,"Failed to update script database.", "Script DB Update Failed", JOptionPane.PLAIN_MESSAGE);
            }
      return null;
    }

    /*
     * Executed in event dispatching thread
     */
    @Override
    public void done() {
      Toolkit.getDefaultToolkit().beep();
      jProgressBar_status.setIndeterminate(false);
      setCursor(null); // turn off the wait cursor 
    }
  }
    
    
    
    
    
    
    private static String getValidTarget(String ip){
        final String DOMAIN_NAME_PATTERN = "^[A-Za-z0-9-]+(\\.[A-Za-z0-9-]+)*(\\.[A-Za-z]{2,})$";
        
        /* Explaination
         
        ^			#  start of the line
        [A-Za-z0-9-]+           #  start with the string in the brackets [ ], must contain one or more (+)
        (			#  start of group #1 - For sub-domain.
        \\.[A-Za-z0-9-]+        #  follow by a dot "." and string in the brackets [ ], must contain one or more (+)
        )*                      #  end of group #1, this group is optional (*)
        (			#  start of group #2 - check the extension
        \\.[A-Za-z]{2,}         #  follow by a dot "." and string in the brackets [ ], with minimum length of 2
        )			#  end of group #2
        $			#  end of the line
        
        */
        
        if (ip == null || ip.isEmpty()) return null;
        ip = ip.trim();
        try{
            Pattern pattern = Pattern.compile(DOMAIN_NAME_PATTERN);
            Matcher matcher = pattern.matcher(ip);
            if(matcher.matches()) return ip;
            else return getValidIPAddress(ip);
        }catch(Exception e){
            return null;
        }
    }
    
    private static String getValidIPAddress(String ip){
        final String IPADDRESS_PATTERN = 
		"^([01]?\\d\\d?|2[0-4]\\d|25[0-5])\\." +
		"([01]?\\d\\d?|2[0-4]\\d|25[0-5])\\." +
		"([01]?\\d\\d?|2[0-4]\\d|25[0-5])\\." +
		"([01]?\\d\\d?|2[0-4]\\d|25[0-5])$";  
        
        //if (ip == null || ip.isEmpty()) return false;
        ip = ip.trim();
        if ((ip.length() < 6) & (ip.length() > 15)) return null;
        try{
            Pattern pattern = Pattern.compile(IPADDRESS_PATTERN);
            Matcher matcher = pattern.matcher(ip);
            if(matcher.matches()) return ip;
            else return null;
        }catch(Exception e){
            return null;
        }
        
    }
    
    private String getValidPort(String port){
        String valid = null;
        int x;
        if (port == null || port.isEmpty()) return null;
        port = port.trim();
        if(port.matches("-?\\d+")){
            try{
                int PORT = Integer.parseInt(port);
                if(PORT < 0 || PORT > 65535){
                    return null;
                }else{
                    valid = port;
                }
            }catch(Exception e){
               
            }
        }else{
            if(port.toLowerCase().equals("default")){
                valid = "default";
            }else if(port.toLowerCase().equals("ftp")){
                valid = "21";
            }else if(port.toLowerCase().equals("ssh")){
                valid = "22";
            }else if(port.toLowerCase().equals("telnet")){
                valid = "23";
            }else if(port.toLowerCase().equals("smtp")){
                valid = "25";
            }else if(port.toLowerCase().equals("dns")){
                valid = "53";
            }else if(port.toLowerCase().equals("tftp")){
                valid = "69";
            }else if(port.toLowerCase().equals("finger")){
                valid = "79";
            }else if(port.toLowerCase().equals("http")){
                valid = "80";
            }else if(port.toLowerCase().equals("ntp")){
                valid="123";
            }else if(port.toLowerCase().equals("snmp")){
                valid="161";
            }else if(port.toLowerCase().equals("https")){
                valid = "443";
            }else if(port.toLowerCase().equals("rlogin")){
                valid = "513";
            }else if(port.toLowerCase().equals("rsh")){
                valid = "514";
            }else if(port.toLowerCase().equals("citrix")){
                valid = "1494";
            }else if(port.toLowerCase().equals("sybase")){
                valid = "1498";
            }else if(port.toLowerCase().equals("oracle")){
                valid = "1521";
            }else if(port.toLowerCase().equals("mysql")){
                valid = "3306";
            }else if(port.toLowerCase().equals("rdp")){
                valid = "3389";
            }else{
                try {
                    x = Integer.parseInt(port);
                    if(x>0 && x<65535){
                        return Integer.toString(x);
                    }
                } catch (Exception e) {
                    return null;
                }
            }
            
        }
        return valid;
    }
    
}

class MyDocumentListener implements DocumentListener{
    
    JLabel status;
    public MyDocumentListener(JTabbedPane t, JLabel status) {
       
        this.status=status;
        
    }
    
    public void insertUpdate(DocumentEvent de){
        
        if(!status.getText().contains("File not saved:")){
            status.setFont(new java.awt.Font("Lucida Grande", 1, 13)); // NOI18N
            status.setForeground(new java.awt.Color(255, 11, 21));

            status.setText("File not saved: "+status.getText());
        }
       
    }
    
    
   
    public void removeUpdate(DocumentEvent e) {
        if(!status.getText().contains("Unsaved")){
            status.setFont(new java.awt.Font("Lucida Grande", 1, 13)); // NOI18N
            status.setForeground(new java.awt.Color(255, 11, 21));

            status.setText("Unsaved: "+status.getText());
        }
    }

    
    public void changedUpdate(DocumentEvent e) {
        if(!status.getText().contains("Unsaved")){
            status.setFont(new java.awt.Font("Lucida Grande", 1, 13)); // NOI18N
            status.setForeground(new java.awt.Color(255, 11, 21));

            status.setText("Unsaved: "+status.getText());
        }
    }
    
}
